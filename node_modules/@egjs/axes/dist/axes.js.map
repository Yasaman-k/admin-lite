{"version":3,"file":"axes.js","sources":["../src/cfcs/reactive/const.ts","../src/cfcs/reactive/Observer.ts","../src/cfcs/core/utils.ts","../src/cfcs/reactive/utils.ts","../src/cfcs/dom/utils.ts","../src/browser.ts","../src/const.ts","../src/utils.ts","../src/EventManager.ts","../src/InterruptManager.ts","../src/Coordinate.ts","../src/AxisManager.ts","../src/eventInput/EventInput.ts","../src/eventInput/MouseEventInput.ts","../src/eventInput/TouchEventInput.ts","../src/eventInput/PointerEventInput.ts","../src/eventInput/TouchMouseEventInput.ts","../src/inputType/InputType.ts","../src/InputObserver.ts","../src/animation/AnimationManager.ts","../src/animation/EasingManager.ts","../src/Axes.ts","../src/inputType/PanInput.ts","../src/inputType/RotatePanInput.ts","../src/inputType/PinchInput.ts","../src/inputType/WheelInput.ts","../src/inputType/MoveKeyInput.ts","../src/reactive.ts","../src/index.ts","../src/index.umd.ts"],"sourcesContent":["export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\n","import Component from \"@egjs/component\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value) => void;\n}\n\nexport class Observer<Value> {\n  private _current: Value;\n  private _emitter = new Component<EmitterEvents<Value>>();\n\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    const isUpdate = value !== this._current;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value);\n    }\n  }\n  public subscribe(callback: (value: Value) => void) {\n    this._emitter.on(\"update\", callback);\n  }\n  public unsubscribe(callback?: (value: Value) => void) {\n    this._emitter.off(\"update\", callback);\n  }\n}\n","\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { ReactiveMethods } from \"./types\";\nimport { keys, Ref } from \"../core\";\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    instance[OBSERVERS_PATH] = {};\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = new Observer(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n  const prototype = Constructor.prototype;\n\n  prototype[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n    getObserver(this, name).subscribe(callback);\n  };\n  prototype[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n    if (!name) {\n      keys(getObservers(this)).forEach((observerName) => {\n        this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n\nexport interface ReactiveSubscribe<Properties extends Record<string, any>> {\n  subscribe<Name extends keyof Properties = keyof Properties>(\n    name: Name, callback: (value: Properties[Name]) => void): void;\n  unsubscribe<Name extends keyof Properties = keyof Properties>(\n    name?: Name, callback?: (value: Properties[Name]) => void): void;\n}\n","\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable no-new-func, no-nested-ternary */\n\nlet win: any;\n\nif (typeof window === \"undefined\") {\n  // window is undefined in node.js\n  win = {\n    navigator: {\n      userAgent: \"\",\n    },\n  };\n} else {\n  win = window;\n}\n/* eslint-enable no-new-func, no-nested-ternary */\n\nexport { win as window };\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nexport const DIRECTION_NONE = 1;\nexport const DIRECTION_LEFT = 2;\nexport const DIRECTION_RIGHT = 4;\nexport const DIRECTION_HORIZONTAL = 2 | 4;\nexport const DIRECTION_UP = 8;\nexport const DIRECTION_DOWN = 16;\nexport const DIRECTION_VERTICAL = 8 | 16;\nexport const DIRECTION_ALL = 2 | 4 | 8 | 16;\n\nexport const MOUSE_LEFT = \"left\";\nexport const MOUSE_RIGHT = \"right\";\nexport const MOUSE_MIDDLE = \"middle\";\n\nexport const VELOCITY_INTERVAL = 16;\n\nexport const AXES_METHODS = [\n  \"connect\",\n  \"disconnect\",\n  \"get\",\n  \"setTo\",\n  \"setBy\",\n  \"stopAnimation\",\n  \"updateAnimation\",\n  \"isBounceArea\",\n] as const;\n\nexport const AXES_EVENTS = [\n  \"hold\",\n  \"release\",\n  \"change\",\n  \"animationStart\",\n  \"animationEnd\",\n  \"finish\",\n] as const;\n\nimport getAgent from \"@egjs/agent\";\n\nimport { window } from \"./browser\";\n\nexport const IOS_EDGE_THRESHOLD = 30;\nexport const IS_IOS_SAFARI =\n  \"ontouchstart\" in window && getAgent().browser.name === \"safari\";\n\nexport const TRANSFORM = (() => {\n  if (typeof document === \"undefined\") {\n    return \"\";\n  }\n  const bodyStyle = (document.head || document.getElementsByTagName(\"head\")[0])\n    .style;\n  const target = [\n    \"transform\",\n    \"webkitTransform\",\n    \"msTransform\",\n    \"mozTransform\",\n  ];\n  for (let i = 0, len = target.length; i < len; i++) {\n    if (target[i] in bodyStyle) {\n      return target[i];\n    }\n  }\n  return \"\";\n})();\n\nexport const PREVENT_DRAG_CSSPROPS = {\n  \"user-select\": \"none\",\n  \"-webkit-user-drag\": \"none\",\n};\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { window } from \"./browser\";\nimport { PREVENT_DRAG_CSSPROPS } from \"./const\";\nimport { Axis, AxisOption } from \"./AxisManager\";\nimport { PanInputOption } from \"./inputType/PanInput\";\nimport { PinchInputOption } from \"./inputType/PinchInput\";\nimport { ObjectInterface } from \"./types\";\nimport {\n  DIRECTION_NONE,\n  DIRECTION_VERTICAL,\n  DIRECTION_HORIZONTAL,\n  DIRECTION_ALL,\n} from \"./const\";\n\ndeclare let jQuery: any;\n\nexport const toArray = (nodes: NodeList): HTMLElement[] => {\n  // const el = Array.prototype.slice.call(nodes);\n  // for IE8\n  const el = [];\n  for (let i = 0, len = nodes.length; i < len; i++) {\n    el.push(nodes[i]);\n  }\n  return el;\n};\n\nexport const $ = (param, multi = false) => {\n  let el;\n  if (typeof param === \"string\") {\n    // String (HTML, Selector)\n    // check if string is HTML tag format\n    const match = param.match(/^<([a-z]+)\\s*([^>]*)>/);\n\n    // creating element\n    if (match) {\n      // HTML\n      const dummy = document.createElement(\"div\");\n\n      dummy.innerHTML = param;\n      el = toArray(dummy.childNodes);\n    } else {\n      // Selector\n      el = toArray(document.querySelectorAll(param));\n    }\n    if (!multi) {\n      el = el.length >= 1 ? el[0] : undefined;\n    }\n  } else if (param === window) {\n    // window\n    el = param;\n  } else if (\"value\" in param || \"current\" in param) {\n    el = param.value! || param.current!;\n  } else if (param.nodeName && (param.nodeType === 1 || param.nodeType === 9)) {\n    // HTMLElement, Document\n    el = param;\n  } else if (\n    (\"jQuery\" in window && param instanceof jQuery) ||\n    param.constructor.prototype.jquery\n  ) {\n    // jQuery\n    el = multi ? param.toArray() : param.get(0);\n  } else if (Array.isArray(param)) {\n    el = param.map((v) => $(v));\n    if (!multi) {\n      el = el.length >= 1 ? el[0] : undefined;\n    }\n  }\n  return el;\n};\n\nlet raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\nlet caf = window.cancelAnimationFrame || window.webkitCancelAnimationFrame;\nif (raf && !caf) {\n  const keyInfo = {};\n  const oldraf = raf;\n  raf = (callback: FrameRequestCallback) => {\n    const wrapCallback = (timestamp: number) => {\n      if (keyInfo[key]) {\n        callback(timestamp);\n      }\n    };\n    const key = oldraf(wrapCallback);\n    keyInfo[key] = true;\n    return key;\n  };\n  caf = (key: number) => {\n    delete keyInfo[key];\n  };\n} else if (!(raf && caf)) {\n  raf = (callback: FrameRequestCallback) => {\n    return window.setTimeout(() => {\n      callback(\n        ((window.performance &&\n          window.performance.now &&\n          window.performance.now()) as number) || new Date().getTime()\n      );\n    }, 16);\n  };\n  caf = window.clearTimeout;\n}\n\n/**\n * A polyfill for the window.requestAnimationFrame() method.\n * @see  https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\n * @private\n */\nexport const requestAnimationFrame = (fp) => {\n  return raf(fp);\n};\n/**\n * A polyfill for the window.cancelAnimationFrame() method. It cancels an animation executed through a call to the requestAnimationFrame() method.\n * @param {Number} key −  The ID value returned through a call to the requestAnimationFrame() method. <ko>requestAnimationFrame() 메서드가 반환한 아이디 값</ko>\n * @see  https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelAnimationFrame\n * @private\n */\nexport const cancelAnimationFrame = (key) => {\n  caf(key);\n};\n\nexport const map = <T, U>(\n  obj: ObjectInterface<T>,\n  callback: (value: T, key: string) => U\n): ObjectInterface<U> => {\n  const tranformed: ObjectInterface<U> = {};\n\n  for (const k in obj) {\n    if (k) {\n      tranformed[k] = callback(obj[k], k);\n    }\n  }\n  return tranformed;\n};\n\nexport const filter = <T>(\n  obj: ObjectInterface<T>,\n  callback: (value: T, key: string) => boolean\n): ObjectInterface<T> => {\n  const filtered: ObjectInterface<T> = {};\n\n  for (const k in obj) {\n    if (k && callback(obj[k], k)) {\n      filtered[k] = obj[k];\n    }\n  }\n  return filtered;\n};\nexport const every = <T>(\n  obj: ObjectInterface<T>,\n  callback: (value: T, key: string) => boolean\n) => {\n  for (const k in obj) {\n    if (k && !callback(obj[k], k)) {\n      return false;\n    }\n  }\n  return true;\n};\nexport const equal = (\n  target: ObjectInterface,\n  base: ObjectInterface\n): boolean => {\n  return every(target, (v, k) => v === base[k]);\n};\n\nconst roundNumFunc = {};\n\nexport const roundNumber = (num: number, roundUnit: number) => {\n  // Cache for performance\n  if (!roundNumFunc[roundUnit]) {\n    roundNumFunc[roundUnit] = getRoundFunc(roundUnit);\n  }\n\n  return roundNumFunc[roundUnit](num);\n};\n\nexport const roundNumbers = (\n  num: ObjectInterface<number>,\n  roundUnit: ObjectInterface<number> | number\n): ObjectInterface<number> => {\n  if (!num || !roundUnit) {\n    return num;\n  }\n  return map(num, (value, key) =>\n    roundNumber(\n      value,\n      typeof roundUnit === \"number\" ? roundUnit : roundUnit[key]\n    )\n  );\n};\n\nexport const getDecimalPlace = (val: number): number => {\n  if (!isFinite(val)) {\n    return 0;\n  }\n\n  const v = `${val}`;\n\n  if (v.indexOf(\"e\") >= 0) {\n    // Exponential Format\n    // 1e-10, 1e-12\n    let p = 0;\n    let e = 1;\n\n    while (Math.round(val * e) / e !== val) {\n      e *= 10;\n      p++;\n    }\n\n    return p;\n  }\n\n  // In general, following has performance benefit.\n  // https://jsperf.com/precision-calculation\n  return v.indexOf(\".\") >= 0 ? v.length - v.indexOf(\".\") - 1 : 0;\n};\n\nexport const inversePow = (n: number) => {\n  // replace Math.pow(10, -n) to solve floating point issue.\n  // eg. Math.pow(10, -4) => 0.00009999999999999999\n  return 1 / Math.pow(10, n);\n};\n\nexport const getRoundFunc = (v: number) => {\n  const p = v < 1 ? Math.pow(10, getDecimalPlace(v)) : 1;\n\n  return (n: number) => {\n    if (v === 0) {\n      return 0;\n    }\n\n    return Math.round(Math.round(n / v) * v * p) / p;\n  };\n};\n\nexport const getAngle = (posX: number, posY: number) => {\n  return (Math.atan2(posY, posX) * 180) / Math.PI;\n};\n\nexport const isCssPropsFromAxes = (originalCssProps: {\n  [key: string]: string;\n}) => {\n  let same = true;\n  Object.keys(PREVENT_DRAG_CSSPROPS).forEach((prop) => {\n    if (\n      !originalCssProps ||\n      originalCssProps[prop] !== PREVENT_DRAG_CSSPROPS[prop]\n    ) {\n      same = false;\n    }\n  });\n  return same;\n};\n\nexport const getDirection = (\n  useHorizontal: boolean,\n  useVertical: boolean\n): number => {\n  if (useHorizontal && useVertical) {\n    return DIRECTION_ALL;\n  } else if (useHorizontal) {\n    return DIRECTION_HORIZONTAL;\n  } else if (useVertical) {\n    return DIRECTION_VERTICAL;\n  } else {\n    return DIRECTION_NONE;\n  }\n};\n\nexport const getInitialPos = (\n  axis: ObjectInterface<AxisOption>,\n  startPos: Axis\n): Axis => {\n  return {\n    ...Object.keys(axis).reduce(\n      (result, key) =>\n        Object.assign(result, {\n          [key]: axis[key].startPos ?? axis[key].range[0] ?? 0,\n        }),\n      {}\n    ),\n    ...startPos,\n  };\n};\n\nexport const useDirection = (\n  checkType: number,\n  direction: number,\n  userDirection?: number\n): boolean => {\n  if (userDirection) {\n    return !!(\n      direction === DIRECTION_ALL ||\n      (direction & checkType && userDirection & checkType)\n    );\n  } else {\n    return !!(direction & checkType);\n  }\n};\n\nexport const setCssProps = (\n  element: HTMLElement,\n  option: PanInputOption | PinchInputOption,\n  direction: number\n): { [key: string]: string } => {\n  const touchActionMap = {\n    [DIRECTION_NONE]: \"auto\",\n    [DIRECTION_ALL]: \"none\",\n    [DIRECTION_VERTICAL]: \"pan-x\",\n    [DIRECTION_HORIZONTAL]: \"pan-y\",\n  };\n  const oldCssProps = {};\n  if (element && element.style) {\n    const touchAction = option.touchAction\n      ? option.touchAction\n      : touchActionMap[direction];\n    const newCssProps = {\n      ...PREVENT_DRAG_CSSPROPS,\n      \"touch-action\":\n        element.style[\"touch-action\"] === \"none\" ? \"none\" : touchAction,\n    };\n    Object.keys(newCssProps).forEach((prop) => {\n      oldCssProps[prop] = element.style[prop];\n      element.style[prop] = newCssProps[prop];\n    });\n  }\n  return oldCssProps;\n};\n\nexport const revertCssProps = (\n  element: HTMLElement,\n  originalCssProps: { [key: string]: string }\n): { [key: string]: string } => {\n  if (element && element.style && originalCssProps) {\n    Object.keys(originalCssProps).forEach((prop) => {\n      element.style[prop] = originalCssProps[prop];\n    });\n  }\n  return;\n};\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ComponentEvent } from \"@egjs/component\";\n\nimport { InputType } from \"./inputType/InputType\";\nimport { Axis } from \"./AxisManager\";\nimport Axes from \"./Axes\";\nimport { roundNumbers } from \"./utils\";\nimport { AnimationParam, OnAnimationStart, OnRelease } from \"./types\";\nimport { AnimationManager } from \"./animation/AnimationManager\";\nimport { getObserver } from \"./cfcs\";\n\nexport interface ChangeEventOption {\n  input: InputType;\n  event;\n}\n\nexport class EventManager {\n  public animationManager: AnimationManager;\n  public constructor(private _axes: Axes) {}\n  /**\n   * This event is fired when a user holds an element on the screen of the device.\n   * @ko 사용자가 기기의 화면에 손을 대고 있을 때 발생하는 이벤트\n   * @event Axes#hold\n   * @type {object}\n   * @property {Object.<string, number>} pos coordinate <ko>좌표 정보</ko>\n   * @property {Object} input The instance of inputType where the event occurred<ko>이벤트가 발생한 inputType 인스턴스</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"hold\", function(event) {\n   *   // event.pos\n   *   // event.input\n   *   // event.inputEvent\n   *   // isTrusted\n   * });\n   * ```\n   */\n  public hold(pos: Axis, option: ChangeEventOption) {\n    const { roundPos } = this._getRoundPos(pos);\n\n    this._axes.trigger(\n      new ComponentEvent(\"hold\", {\n        pos: roundPos,\n        input: option.input || null,\n        inputEvent: option.event || null,\n        isTrusted: true,\n      })\n    );\n  }\n\n  /**\n   * Specifies the coordinates to move after the 'change' event. It works when the holding value of the change event is true.\n   * @ko 'change' 이벤트 이후 이동할 좌표를 지정한다. change이벤트의 holding 값이 true일 경우에 동작한다\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"change\", function(event) {\n   *   event.holding && event.set({x: 10});\n   * });\n   * ```\n   */\n  /** Specifies the animation coordinates to move after the 'release' or 'animationStart' events.\n   * @ko 'release' 또는 'animationStart' 이벤트 이후 이동할 좌표를 지정한다.\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"animationStart\", function(event) {\n   *   event.setTo({x: 10}, 2000);\n   * });\n   * ```\n   */\n  /**\n   * This event is fired when a user release an element on the screen of the device.\n   * @ko 사용자가 기기의 화면에서 손을 뗐을 때 발생하는 이벤트\n   * @event Axes#release\n   * @type {object}\n   * @property {Object.<string, number>} depaPos The coordinates when releasing an element<ko>손을 뗐을 때의 좌표 </ko>\n   * @property {Object.<string, number>} destPos The coordinates to move to after releasing an element<ko>손을 뗀 뒤에 이동할 좌표</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Object.<string, number>} bounceRatio If the coordinates at the time of release are in the bounce area, the current bounce value divided by the maximum bounce value <ko>손을 뗐을 때의 좌표가 bounce 영역에 있는 경우 현재 bounce된 값을 최대 bounce 값으로 나눈 수치.</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {Object} input The instance of inputType where the event occurred<ko>이벤트가 발생한 inputType 인스턴스</ko>\n   * @property {setTo} setTo Specifies the animation coordinates to move after the event <ko>이벤트 이후 이동할 애니메이션 좌표를 지정한다</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"release\", function(event) {\n   *   // event.depaPos\n   *   // event.destPos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.setTo\n   *   // event.isTrusted\n   *\n   *   // if you want to change the animation coordinates to move after the 'release' event.\n   *   event.setTo({x: 10}, 2000);\n   * });\n   * ```\n   */\n  public triggerRelease(param: AnimationParam) {\n    const { roundPos, roundDepa } = this._getRoundPos(\n      param.destPos,\n      param.depaPos\n    );\n    param.destPos = roundPos;\n    param.depaPos = roundDepa;\n    param.setTo = this._createUserControll(param.destPos, param.duration);\n    this._axes.trigger(\n      new ComponentEvent(\"release\", {\n        ...param,\n        bounceRatio: this._getBounceRatio(roundPos),\n      } as OnRelease)\n    );\n  }\n\n  /**\n   * This event is fired when coordinate changes.\n   * @ko 좌표가 변경됐을 때 발생하는 이벤트\n   * @event Axes#change\n   * @type {object}\n   * @property {Object.<string, number>} pos  The coordinate <ko>좌표</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Object.<string, number>} bounceRatio If the current coordinates are in the bounce area, the current bounce value divided by the maximum bounce value <ko>현재 좌표가 bounce 영역에 있는 경우 현재 bounce된 값을 최대 bounce 값으로 나눈 수치.</ko>\n   * @property {Boolean} holding Indicates whether a user holds an element on the screen of the device.<ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n   * @property {Object} input The instance of inputType where the event occurred. If the value is changed by animation, it returns 'null'.<ko>이벤트가 발생한 inputType 인스턴스. 애니메이션에 의해 값이 변경될 경우에는 'null'을 반환한다.</ko>\n   * @property {Object} inputEvent The event object received from inputType. If the value is changed by animation, it returns 'null'.<ko>inputType으로 부터 받은 이벤트 객체. 애니메이션에 의해 값이 변경될 경우에는 'null'을 반환한다.</ko>\n   * @property {set} set Specifies the coordinates to move after the event. It works when the holding value is true <ko>이벤트 이후 이동할 좌표를 지정한다. holding 값이 true일 경우에 동작한다.</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"change\", function(event) {\n   *   // event.pos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.holding\n   *   // event.set\n   *   // event.isTrusted\n   *\n   *   // if you want to change the coordinates to move after the 'change' event.\n   *   // it works when the holding value of the change event is true.\n   *   event.holding && event.set({x: 10});\n   * });\n   * ```\n   */\n  public triggerChange(\n    pos: Axis,\n    depaPos?: Axis,\n    option?: ChangeEventOption,\n    holding: boolean = false\n  ) {\n    const animationManager = this.animationManager;\n    const axisManager = animationManager.axisManager;\n    const eventInfo = animationManager.getEventInfo();\n    const { roundPos, roundDepa } = this._getRoundPos(pos, depaPos);\n    const moveTo = axisManager.moveTo(roundPos, roundDepa);\n    const inputEvent = option?.event || eventInfo?.event || null;\n    const param = {\n      pos: moveTo.pos,\n      delta: moveTo.delta,\n      bounceRatio: this._getBounceRatio(moveTo.pos),\n      holding,\n      inputEvent,\n      isTrusted: !!inputEvent,\n      input: option?.input || eventInfo?.input || null,\n      set: inputEvent ? this._createUserControll(moveTo.pos) : () => {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    };\n    const event = new ComponentEvent(\"change\", param);\n    this._axes.trigger(event);\n    Object.keys(moveTo.pos).forEach((axis) => {\n      const p = moveTo.pos[axis];\n      getObserver(this._axes, axis, p).current = p;\n    });\n\n    if (inputEvent) {\n      axisManager.set(\n        (param.set() as { destPos: Axis; duration: number }).destPos\n      );\n    }\n\n    return !event.isCanceled();\n  }\n\n  /**\n   * This event is fired when animation starts.\n   * @ko 에니메이션이 시작할 때 발생한다.\n   * @event Axes#animationStart\n   * @type {object}\n   * @property {Object.<string, number>} depaPos The coordinates when animation starts<ko>애니메이션이 시작 되었을 때의 좌표 </ko>\n   * @property {Object.<string, number>} destPos The coordinates to move to. If you change this value, you can run the animation<ko>이동할 좌표. 이값을 변경하여 애니메이션을 동작시킬수 있다</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Number} duration Duration of the animation (unit: ms). If you change this value, you can control the animation duration time.<ko>애니메이션 진행 시간(단위: ms). 이값을 변경하여 애니메이션의 이동시간을 조절할 수 있다.</ko>\n   * @property {Object} input The instance of inputType where the event occurred. If the value is changed by animation, it returns 'null'.<ko>이벤트가 발생한 inputType 인스턴스. 애니메이션에 의해 값이 변경될 경우에는 'null'을 반환한다.</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {setTo} setTo Specifies the animation coordinates to move after the event <ko>이벤트 이후 이동할 애니메이션 좌표를 지정한다</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"release\", function(event) {\n   *   // event.depaPos\n   *   // event.destPos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.setTo\n   *   // event.isTrusted\n   *\n   *   // if you want to change the animation coordinates to move after the 'animationStart' event.\n   *   event.setTo({x: 10}, 2000);\n   * });\n   * ```\n   */\n  public triggerAnimationStart(param: AnimationParam): boolean {\n    const { roundPos, roundDepa } = this._getRoundPos(\n      param.destPos,\n      param.depaPos\n    );\n    param.destPos = roundPos;\n    param.depaPos = roundDepa;\n    param.setTo = this._createUserControll(param.destPos, param.duration);\n    const event = new ComponentEvent(\n      \"animationStart\",\n      param as OnAnimationStart\n    );\n    this._axes.trigger(event);\n    return !event.isCanceled();\n  }\n\n  /**\n   * This event is fired when animation ends.\n   * @ko 에니메이션이 끝났을 때 발생한다.\n   * @event Axes#animationEnd\n   * @type {object}\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"animationEnd\", function(event) {\n   *   // event.isTrusted\n   * });\n   * ```\n   */\n  public triggerAnimationEnd(isTrusted: boolean = false) {\n    this._axes.trigger(\n      new ComponentEvent(\"animationEnd\", {\n        isTrusted,\n      })\n    );\n  }\n\n  /**\n   * This event is fired when all actions have been completed.\n   * @ko 에니메이션이 끝났을 때 발생한다.\n   * @event Axes#finish\n   * @type {object}\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * }).on(\"finish\", function(event) {\n   *   // event.isTrusted\n   * });\n   * ```\n   */\n  public triggerFinish(isTrusted: boolean = false) {\n    this._axes.trigger(\n      new ComponentEvent(\"finish\", {\n        isTrusted,\n      })\n    );\n  }\n\n  public setAnimationManager(animationManager: AnimationManager) {\n    this.animationManager = animationManager;\n  }\n\n  public destroy() {\n    this._axes.off();\n  }\n\n  private _createUserControll(pos: Axis, duration: number = 0) {\n    // to controll\n    const userControl = {\n      destPos: { ...pos },\n      duration,\n    };\n    return (\n      toPos?: Axis,\n      userDuration?: number\n    ): { destPos: Axis; duration: number } => {\n      if (toPos) {\n        userControl.destPos = { ...toPos };\n      }\n      if (userDuration !== undefined) {\n        userControl.duration = userDuration;\n      }\n      return userControl;\n    };\n  }\n\n  private _getRoundPos(pos: Axis, depaPos?: Axis) {\n    // round value if round exist\n    const roundUnit = this._axes.options.round;\n\n    // if (round == null) {\n    // \treturn {pos, depaPos}; // undefined, undefined\n    // }\n    return {\n      roundPos: roundNumbers(pos, roundUnit),\n      roundDepa: roundNumbers(depaPos, roundUnit),\n    };\n  }\n\n  private _getBounceRatio(pos: Axis): Axis {\n    return this._axes.axisManager.map(pos, (v, opt) => {\n      if (v < opt.range[0] && opt.bounce[0] !== 0) {\n        return (opt.range[0] - v) / opt.bounce[0];\n      } else if (v > opt.range[1] && opt.bounce[1] !== 0) {\n        return (v - opt.range[1]) / opt.bounce[1];\n      } else {\n        return 0;\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { AxesOption } from \"./Axes\";\nexport class InterruptManager {\n  private _prevented = false; //  check whether the animation event was prevented\n  public constructor(private _options: AxesOption) {}\n\n  public isInterrupting() {\n    // when interruptable is 'true', return value is always 'true'.\n    return this._options.interruptable || this._prevented;\n  }\n\n  public isInterrupted() {\n    return !this._options.interruptable && this._prevented;\n  }\n\n  public setInterrupt(prevented) {\n    if (!this._options.interruptable) {\n      this._prevented = prevented;\n    }\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nexport const getInsidePosition = (\n  destPos: number,\n  range: number[],\n  circular: boolean[],\n  bounce?: number[]\n): number => {\n  let toDestPos: number = destPos;\n  const targetRange: number[] = [\n    circular[0] ? range[0] : bounce ? range[0] - bounce[0] : range[0],\n    circular[1] ? range[1] : bounce ? range[1] + bounce[1] : range[1],\n  ];\n\n  toDestPos = Math.max(targetRange[0], toDestPos);\n  toDestPos = Math.min(targetRange[1], toDestPos);\n\n  return toDestPos;\n};\n\n// determine outside\nexport const isOutside = (pos: number, range: number[]): boolean => {\n  return pos < range[0] || pos > range[1];\n};\n\n// determine whether position has reached the maximum moveable area\nexport const isEndofBounce = (\n  pos: number,\n  range: number[],\n  bounce: number[],\n  circular: boolean[]\n): boolean => {\n  return (\n    (!circular[0] && pos === range[0] - bounce[0]) ||\n    (!circular[1] && pos === range[1] + bounce[1])\n  );\n};\n\nexport const getDuration = (distance: number, deceleration): number => {\n  const duration = Math.sqrt((distance / deceleration) * 2);\n\n  // when duration is under 100, then value is zero\n  return duration < 100 ? 0 : duration;\n};\n\nexport const isCircularable = (\n  destPos: number,\n  range: number[],\n  circular: boolean[]\n): boolean => {\n  return (\n    (circular[1] && destPos > range[1]) || (circular[0] && destPos < range[0])\n  );\n};\n\nexport const getCirculatedPos = (\n  pos: number,\n  range: number[],\n  circular: boolean[]\n): number => {\n  let toPos = pos;\n  const min = range[0];\n  const max = range[1];\n  const length = max - min;\n\n  if (circular[1] && pos > max) {\n    // right\n    toPos = ((toPos - max) % length) + min;\n  }\n  if (circular[0] && pos < min) {\n    // left\n    toPos = ((toPos - min) % length) + max;\n  }\n  return toPos;\n};\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { isOutside, getCirculatedPos } from \"./Coordinate\";\nimport { map, filter, every } from \"./utils\";\nimport { ObjectInterface } from \"./types\";\n\nexport interface Axis {\n  [key: string]: number;\n}\n\nexport interface AxisOption {\n  range?: number[];\n  bounce?: number | number[];\n  circular?: boolean | boolean[];\n  startPos?: number;\n}\n\nexport class AxisManager {\n  private _pos: Axis;\n  public constructor(private _axis: ObjectInterface<AxisOption>) {\n    this._complementOptions();\n    this._pos = Object.keys(this._axis).reduce((acc, v) => {\n      acc[v] = this._axis[v].range[0];\n      return acc;\n    }, {});\n  }\n\n  public getDelta(depaPos: Axis, destPos: Axis): Axis {\n    const fullDepaPos = this.get(depaPos);\n    return map(this.get(destPos), (v, k) => v - fullDepaPos[k]);\n  }\n\n  public get(axes?: string[] | Axis): Axis {\n    if (axes && Array.isArray(axes)) {\n      return axes.reduce((acc, v) => {\n        if (v && v in this._pos) {\n          acc[v] = this._pos[v];\n        }\n        return acc;\n      }, {});\n    } else {\n      return { ...this._pos, ...((axes || {}) as Axis) };\n    }\n  }\n\n  public moveTo(pos: Axis, depaPos: Axis = this._pos): { [key: string]: Axis } {\n    const delta = map(this._pos, (v, key) => {\n      return key in pos && key in depaPos ? pos[key] - depaPos[key] : 0;\n    });\n\n    this.set(\n      this.map(pos, (v, opt) =>\n        opt ? getCirculatedPos(v, opt.range, opt.circular as boolean[]) : 0\n      )\n    );\n    return {\n      pos: { ...this._pos },\n      delta,\n    };\n  }\n\n  public set(pos: Axis) {\n    for (const k in pos) {\n      if (k && k in this._pos) {\n        this._pos[k] = pos[k];\n      }\n    }\n  }\n\n  public every(\n    pos: Axis,\n    callback: (value: number, options: AxisOption, key: string) => boolean\n  ): boolean {\n    const axisOptions = this._axis;\n\n    return every(pos, (value, key) => callback(value, axisOptions[key], key));\n  }\n\n  public filter(\n    pos: Axis,\n    callback: (value: number, options: AxisOption, key: string) => boolean\n  ): Axis {\n    const axisOptions = this._axis;\n\n    return filter(pos, (value, key) => callback(value, axisOptions[key], key));\n  }\n\n  public map<U>(\n    pos: Axis,\n    callback: (value: number, options: AxisOption, key: string) => U\n  ) {\n    const axisOptions = this._axis;\n\n    return map<number, U>(pos, (value, key) =>\n      callback(value, axisOptions[key], key)\n    );\n  }\n\n  public isOutside(axes?: string[]) {\n    return !this.every(\n      axes ? this.get(axes) : this._pos,\n      (v, opt) => !isOutside(v, opt.range)\n    );\n  }\n\n  public getAxisOptions(key: string) {\n    return this._axis[key];\n  }\n\n  /**\n   * set up 'css' expression\n   * @private\n   */\n  private _complementOptions() {\n    Object.keys(this._axis).forEach((axis) => {\n      this._axis[axis] = {\n        ...{\n          range: [0, 100],\n          bounce: [0, 0],\n          circular: [false, false],\n          startPos: this._axis[axis].range[0],\n        },\n        ...this._axis[axis],\n      };\n\n      [\"bounce\", \"circular\"].forEach((v) => {\n        const axisOption = this._axis;\n        const key = axisOption[axis][v];\n\n        if (/string|number|boolean/.test(typeof key)) {\n          axisOption[axis][v] = [key, key];\n        }\n      });\n    });\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ExtendedEvent, InputEventType, LatestInterval } from \"../types\";\nimport { getAngle } from \"../utils\";\nimport { window } from \"../browser\";\nimport {\n  MOUSE_LEFT,\n  MOUSE_MIDDLE,\n  MOUSE_RIGHT,\n  VELOCITY_INTERVAL,\n} from \"../const\";\n\nexport const SUPPORT_TOUCH = \"ontouchstart\" in window;\nexport const SUPPORT_POINTER = \"PointerEvent\" in window;\nexport const SUPPORT_MSPOINTER = \"MSPointerEvent\" in window;\nexport const SUPPORT_POINTER_EVENTS = SUPPORT_POINTER || SUPPORT_MSPOINTER;\n\nexport abstract class EventInput {\n  public prevEvent: ExtendedEvent;\n  private _latestInterval: LatestInterval;\n\n  public abstract onEventStart(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent;\n\n  public abstract onEventMove(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent;\n\n  public abstract onEventEnd(event: InputEventType): void;\n\n  public abstract onRelease(event: InputEventType): void;\n\n  public abstract getTouches(event: InputEventType): number;\n\n  protected abstract _getScale(event: InputEventType): number;\n\n  protected abstract _getCenter(event: InputEventType): {\n    x: number;\n    y: number;\n  };\n\n  protected abstract _getMovement(event: InputEventType): {\n    x: number;\n    y: number;\n  };\n\n  public extendEvent(event: InputEventType): ExtendedEvent {\n    const prevEvent = this.prevEvent;\n    const center = this._getCenter(event);\n    const movement = prevEvent ? this._getMovement(event) : { x: 0, y: 0 };\n    const scale = prevEvent ? this._getScale(event) : 1;\n    const angle = prevEvent\n      ? getAngle(center.x - prevEvent.center.x, center.y - prevEvent.center.y)\n      : 0;\n    const deltaX = prevEvent ? prevEvent.deltaX + movement.x : movement.x;\n    const deltaY = prevEvent ? prevEvent.deltaY + movement.y : movement.y;\n    const offsetX = movement.x;\n    const offsetY = movement.y;\n    const latestInterval = this._latestInterval;\n    const timeStamp = Date.now();\n    const deltaTime = latestInterval ? timeStamp - latestInterval.timestamp : 0;\n    let velocityX = prevEvent ? prevEvent.velocityX : 0;\n    let velocityY = prevEvent ? prevEvent.velocityY : 0;\n    if (!latestInterval || deltaTime >= VELOCITY_INTERVAL) {\n      if (latestInterval) {\n        [velocityX, velocityY] = [\n          (deltaX - latestInterval.deltaX) / deltaTime,\n          (deltaY - latestInterval.deltaY) / deltaTime,\n        ];\n      }\n      this._latestInterval = {\n        timestamp: timeStamp,\n        deltaX,\n        deltaY,\n      };\n    }\n    return {\n      srcEvent: event,\n      scale,\n      angle,\n      center,\n      deltaX,\n      deltaY,\n      offsetX,\n      offsetY,\n      velocityX,\n      velocityY,\n      preventSystemEvent: true,\n    };\n  }\n\n  protected _getDistance(\n    start: Touch | PointerEvent,\n    end: Touch | PointerEvent\n  ): number {\n    const x = end.clientX - start.clientX;\n    const y = end.clientY - start.clientY;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  protected _getButton(event: InputEventType): string {\n    const buttonCodeMap = { 1: MOUSE_LEFT, 2: MOUSE_RIGHT, 4: MOUSE_MIDDLE };\n    const button = this._isTouchEvent(event)\n      ? MOUSE_LEFT\n      : buttonCodeMap[event.buttons];\n    return button ? button : null;\n  }\n\n  protected _isTouchEvent(event: InputEventType): event is TouchEvent {\n    return event.type.indexOf(\"touch\") > -1;\n  }\n\n  protected _isValidButton(button: string, inputButton: string[]): boolean {\n    return inputButton.indexOf(button) > -1;\n  }\n\n  protected _preventMouseButton(event: InputEventType, button: string): void {\n    if (button === MOUSE_RIGHT) {\n      window.addEventListener(\"contextmenu\", this._stopContextMenu);\n    } else if (button === MOUSE_MIDDLE) {\n      event.preventDefault();\n    }\n  }\n\n  private _stopContextMenu = (event: InputEventType) => {\n    event.preventDefault();\n    window.removeEventListener(\"contextmenu\", this._stopContextMenu);\n  };\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { InputEventType, ExtendedEvent } from \"../types\";\n\nimport { EventInput } from \"./EventInput\";\n\nexport class MouseEventInput extends EventInput {\n  public readonly start = [\"mousedown\"];\n  public readonly move = [\"mousemove\"];\n  public readonly end = [\"mouseup\"];\n\n  public onEventStart(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent {\n    const button = this._getButton(event);\n    if (inputButton && !this._isValidButton(button, inputButton)) {\n      return null;\n    }\n    this._preventMouseButton(event, button);\n    return this.extendEvent(event);\n  }\n\n  public onEventMove(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent {\n    if (\n      inputButton &&\n      !this._isValidButton(this._getButton(event), inputButton)\n    ) {\n      return null;\n    }\n    return this.extendEvent(event);\n  }\n\n  public onEventEnd(): void {\n    return;\n  }\n\n  public onRelease(): void {\n    this.prevEvent = null;\n    return;\n  }\n\n  public getTouches(): number {\n    return 0;\n  }\n\n  protected _getScale(): number {\n    return 1;\n  }\n\n  protected _getCenter(event: MouseEvent): { x: number; y: number } {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  protected _getMovement(event: MouseEvent): { x: number; y: number } {\n    const prev = this.prevEvent.srcEvent as MouseEvent;\n    return {\n      x: event.clientX - prev.clientX,\n      y: event.clientY - prev.clientY,\n    };\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { InputEventType, ExtendedEvent } from \"../types\";\n\nimport { EventInput } from \"./EventInput\";\n\nexport class TouchEventInput extends EventInput {\n  public readonly start = [\"touchstart\"];\n  public readonly move = [\"touchmove\"];\n  public readonly end = [\"touchend\", \"touchcancel\"];\n\n  private _baseTouches: TouchList;\n\n  public onEventStart(event: InputEventType): ExtendedEvent {\n    this._baseTouches = (event as TouchEvent).touches;\n    return this.extendEvent(event);\n  }\n\n  public onEventMove(event: InputEventType): ExtendedEvent {\n    return this.extendEvent(event);\n  }\n\n  public onEventEnd(event: InputEventType): void {\n    this._baseTouches = (event as TouchEvent).touches;\n    return;\n  }\n\n  public onRelease(): void {\n    this.prevEvent = null;\n    this._baseTouches = null;\n    return;\n  }\n\n  public getTouches(event: InputEventType): number {\n    return (event as TouchEvent).touches.length;\n  }\n\n  protected _getScale(event: TouchEvent): number {\n    if (event.touches.length !== 2 || this._baseTouches.length < 2) {\n      return null; // TODO: consider calculating non-pinch gesture scale\n    }\n    return (\n      this._getDistance(event.touches[0], event.touches[1]) /\n      this._getDistance(this._baseTouches[0], this._baseTouches[1])\n    );\n  }\n\n  protected _getCenter(event: TouchEvent): { x: number; y: number } {\n    return {\n      x: event.touches[0].clientX,\n      y: event.touches[0].clientY,\n    };\n  }\n\n  protected _getMovement(event: TouchEvent): { x: number; y: number } {\n    const prev = this.prevEvent.srcEvent as TouchEvent;\n    if (event.touches[0].identifier !== prev.touches[0].identifier) {\n      return {\n        x: 0,\n        y: 0,\n      };\n    }\n    return {\n      x: event.touches[0].clientX - prev.touches[0].clientX,\n      y: event.touches[0].clientY - prev.touches[0].clientY,\n    };\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { InputEventType, ExtendedEvent } from \"../types\";\n\nimport { EventInput, SUPPORT_POINTER } from \"./EventInput\";\n\nexport class PointerEventInput extends EventInput {\n  public readonly start = SUPPORT_POINTER ? [\"pointerdown\"] : [\"MSPointerDown\"];\n  public readonly move = SUPPORT_POINTER ? [\"pointermove\"] : [\"MSPointerMove\"];\n  public readonly end = SUPPORT_POINTER\n    ? [\"pointerup\", \"pointercancel\"]\n    : [\"MSPointerUp\", \"MSPointerCancel\"];\n\n  // store first, recent inputs for each event id\n  private _firstInputs: PointerEvent[] = [];\n  private _recentInputs: PointerEvent[] = [];\n\n  public onEventStart(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent {\n    const button = this._getButton(event);\n    if (inputButton && !this._isValidButton(button, inputButton)) {\n      return null;\n    }\n    this._preventMouseButton(event, button);\n    this._updatePointerEvent(event as PointerEvent);\n    return this.extendEvent(event);\n  }\n\n  public onEventMove(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent {\n    if (\n      inputButton &&\n      !this._isValidButton(this._getButton(event), inputButton)\n    ) {\n      return null;\n    }\n    this._updatePointerEvent(event as PointerEvent);\n    return this.extendEvent(event);\n  }\n\n  public onEventEnd(event: InputEventType): void {\n    this._removePointerEvent(event as PointerEvent);\n  }\n\n  public onRelease(): void {\n    this.prevEvent = null;\n    this._firstInputs = [];\n    this._recentInputs = [];\n    return;\n  }\n\n  public getTouches(): number {\n    return this._recentInputs.length;\n  }\n\n  protected _getScale(): number {\n    if (this._recentInputs.length !== 2) {\n      return null; // TODO: consider calculating non-pinch gesture scale\n    }\n    return (\n      this._getDistance(this._recentInputs[0], this._recentInputs[1]) /\n      this._getDistance(this._firstInputs[0], this._firstInputs[1])\n    );\n  }\n\n  protected _getCenter(event: PointerEvent): { x: number; y: number } {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  protected _getMovement(event: PointerEvent): { x: number; y: number } {\n    const prev = this.prevEvent.srcEvent as PointerEvent;\n    if (event.pointerId !== prev.pointerId) {\n      return {\n        x: 0,\n        y: 0,\n      };\n    }\n    return {\n      x: event.clientX - prev.clientX,\n      y: event.clientY - prev.clientY,\n    };\n  }\n\n  private _updatePointerEvent(event: PointerEvent) {\n    let addFlag = false;\n    this._recentInputs.forEach((e, i) => {\n      if (e.pointerId === event.pointerId) {\n        addFlag = true;\n        this._recentInputs[i] = event;\n      }\n    });\n    if (!addFlag) {\n      this._firstInputs.push(event);\n      this._recentInputs.push(event);\n    }\n  }\n\n  private _removePointerEvent(event?: PointerEvent) {\n    this._firstInputs = this._firstInputs.filter(\n      (x) => x.pointerId !== event.pointerId\n    );\n    this._recentInputs = this._recentInputs.filter(\n      (x) => x.pointerId !== event.pointerId\n    );\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { InputEventType, ExtendedEvent } from \"../types\";\n\nimport { EventInput } from \"./EventInput\";\n\nexport class TouchMouseEventInput extends EventInput {\n  public readonly start = [\"mousedown\", \"touchstart\"];\n  public readonly move = [\"mousemove\", \"touchmove\"];\n  public readonly end = [\"mouseup\", \"touchend\", \"touchcancel\"];\n\n  private _baseTouches: TouchList;\n\n  public onEventStart(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent {\n    const button = this._getButton(event);\n    if (this._isTouchEvent(event)) {\n      this._baseTouches = event.touches;\n    }\n    if (inputButton && !this._isValidButton(button, inputButton)) {\n      return null;\n    }\n    this._preventMouseButton(event, button);\n    return this.extendEvent(event);\n  }\n\n  public onEventMove(\n    event: InputEventType,\n    inputButton?: string[]\n  ): ExtendedEvent {\n    if (\n      inputButton &&\n      !this._isValidButton(this._getButton(event), inputButton)\n    ) {\n      return null;\n    }\n    return this.extendEvent(event);\n  }\n\n  public onEventEnd(event: InputEventType): void {\n    if (this._isTouchEvent(event)) {\n      this._baseTouches = event.touches;\n    }\n    return;\n  }\n\n  public onRelease(): void {\n    this.prevEvent = null;\n    this._baseTouches = null;\n    return;\n  }\n\n  public getTouches(event: InputEventType): number {\n    return this._isTouchEvent(event) ? event.touches.length : 0;\n  }\n\n  protected _getScale(event: MouseEvent | TouchEvent): number {\n    if (this._isTouchEvent(event)) {\n      if (event.touches.length !== 2 || this._baseTouches.length < 2) {\n        return 1; // TODO: consider calculating non-pinch gesture scale\n      }\n      return (\n        this._getDistance(event.touches[0], event.touches[1]) /\n        this._getDistance(this._baseTouches[0], this._baseTouches[1])\n      );\n    }\n    return this.prevEvent.scale;\n  }\n\n  protected _getCenter(event: MouseEvent | TouchEvent): {\n    x: number;\n    y: number;\n  } {\n    if (this._isTouchEvent(event)) {\n      return {\n        x: event.touches[0].clientX,\n        y: event.touches[0].clientY,\n      };\n    }\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  protected _getMovement(event: MouseEvent | TouchEvent): {\n    x: number;\n    y: number;\n  } {\n    const prev = this.prevEvent.srcEvent;\n    const [nextSpot, prevSpot] = [event, prev].map((e) => {\n      if (this._isTouchEvent(e)) {\n        return {\n          id: e.touches[0].identifier,\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY,\n        };\n      }\n      return {\n        id: null,\n        x: e.clientX,\n        y: e.clientY,\n      };\n    });\n    return nextSpot.id === prevSpot.id\n      ? { x: nextSpot.x - prevSpot.x, y: nextSpot.y - prevSpot.y }\n      : { x: 0, y: 0 };\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { Axis } from \"../AxisManager\";\nimport { AxesOption } from \"../Axes\";\nimport { ActiveEvent } from \"../types\";\nimport { MouseEventInput } from \"../eventInput/MouseEventInput\";\nimport { TouchEventInput } from \"../eventInput/TouchEventInput\";\nimport { PointerEventInput } from \"../eventInput/PointerEventInput\";\nimport { TouchMouseEventInput } from \"../eventInput/TouchMouseEventInput\";\nimport {\n  SUPPORT_POINTER_EVENTS,\n  SUPPORT_TOUCH,\n} from \"../eventInput/EventInput\";\n\nexport interface InputType {\n  axes: string[];\n  element: HTMLElement;\n  mapAxes(axes: string[]);\n  connect(observer: InputTypeObserver): InputType;\n  disconnect();\n  destroy();\n  enable?();\n  disable?();\n  isEnable?(): boolean;\n}\n\nexport interface InputTypeObserver {\n  options: AxesOption;\n  get(inputType: InputType): Axis;\n  change(inputType: InputType, event, offset: Axis, useAnimation?: boolean);\n  hold(inputType: InputType, event);\n  release(\n    inputType: InputType,\n    event,\n    velocity: number[],\n    inputDuration?: number\n  );\n}\n\nexport const toAxis = (source: string[], offset: number[]): Axis => {\n  return offset.reduce((acc, v, i) => {\n    if (source[i]) {\n      acc[source[i]] = v;\n    }\n    return acc;\n  }, {});\n};\n\nexport const convertInputType = (inputType: string[] = []): ActiveEvent => {\n  let hasTouch = false;\n  let hasMouse = false;\n  let hasPointer = false;\n\n  inputType.forEach((v) => {\n    switch (v) {\n      case \"mouse\":\n        hasMouse = true;\n        break;\n      case \"touch\":\n        hasTouch = SUPPORT_TOUCH;\n        break;\n      case \"pointer\":\n        hasPointer = SUPPORT_POINTER_EVENTS;\n      // no default\n    }\n  });\n  if (hasPointer) {\n    return new PointerEventInput();\n  } else if (hasTouch && hasMouse) {\n    return new TouchMouseEventInput();\n  } else if (hasTouch) {\n    return new TouchEventInput();\n  } else if (hasMouse) {\n    return new MouseEventInput();\n  }\n  return null;\n};\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { InterruptManager } from \"./InterruptManager\";\nimport { InputType, InputTypeObserver, toAxis } from \"./inputType/InputType\";\nimport { EventManager, ChangeEventOption } from \"./EventManager\";\nimport { AxisManager, Axis } from \"./AxisManager\";\nimport { AxesOption } from \"./Axes\";\nimport {\n  isOutside,\n  getInsidePosition,\n  getCirculatedPos,\n  isEndofBounce,\n} from \"./Coordinate\";\nimport { map, equal } from \"./utils\";\nimport { AnimationParam } from \"./types\";\nimport { AnimationManager } from \"./animation/AnimationManager\";\n\nexport class InputObserver implements InputTypeObserver {\n  public options: AxesOption;\n  private _interruptManager: InterruptManager;\n  private _eventManager: EventManager;\n  private _axisManager: AxisManager;\n  private _animationManager: AnimationManager;\n  private _isOutside = false;\n  private _moveDistance: Axis = null;\n  private _isStopped = false;\n  public constructor({\n    options,\n    interruptManager,\n    eventManager,\n    axisManager,\n    animationManager,\n  }: {\n    options: AxesOption;\n    interruptManager: InterruptManager;\n    eventManager: EventManager;\n    axisManager: AxisManager;\n    animationManager: AnimationManager;\n  }) {\n    this.options = options;\n    this._interruptManager = interruptManager;\n    this._eventManager = eventManager;\n    this._axisManager = axisManager;\n    this._animationManager = animationManager;\n  }\n\n  public get(input: InputType): Axis {\n    return this._axisManager.get(input.axes);\n  }\n\n  public hold(input: InputType, event) {\n    if (this._interruptManager.isInterrupted() || !input.axes.length) {\n      return;\n    }\n    const changeOption: ChangeEventOption = {\n      input,\n      event,\n    };\n    this._isStopped = false;\n    this._interruptManager.setInterrupt(true);\n    this._animationManager.stopAnimation(changeOption);\n    if (!this._moveDistance) {\n      this._eventManager.hold(this._axisManager.get(), changeOption);\n    }\n    this._isOutside = this._axisManager.isOutside(input.axes);\n    this._moveDistance = this._axisManager.get(input.axes);\n  }\n\n  public change(input: InputType, event, offset: Axis, useAnimation?: boolean) {\n    if (\n      this._isStopped ||\n      !this._interruptManager.isInterrupting() ||\n      this._axisManager.every(offset, (v) => v === 0)\n    ) {\n      return;\n    }\n    const nativeEvent = event.srcEvent ? event.srcEvent : event;\n    if (nativeEvent.__childrenAxesAlreadyChanged) {\n      return;\n    }\n    let depaPos: Axis = this._moveDistance || this._axisManager.get(input.axes);\n    let destPos: Axis;\n\n    // for outside logic\n    destPos = map(depaPos, (v, k) => v + (offset[k] || 0));\n    if (this._moveDistance) {\n      this._moveDistance = this._axisManager.map(\n        destPos,\n        (v, { circular, range }) =>\n          circular && (circular[0] || circular[1])\n            ? getCirculatedPos(v, range, circular as boolean[])\n            : v\n      );\n    }\n    // from outside to inside\n    if (\n      this._isOutside &&\n      this._axisManager.every(depaPos, (v, opt) => !isOutside(v, opt.range))\n    ) {\n      this._isOutside = false;\n    }\n    depaPos = this._atOutside(depaPos);\n    destPos = this._atOutside(destPos);\n\n    if (!this.options.nested || !this._isEndofAxis(offset, depaPos, destPos)) {\n      nativeEvent.__childrenAxesAlreadyChanged = true;\n    }\n\n    const changeOption: ChangeEventOption = {\n      input,\n      event,\n    };\n    if (useAnimation) {\n      const duration = this._animationManager.getDuration(destPos, depaPos);\n      this._animationManager.animateTo(destPos, duration, changeOption);\n    } else {\n      const isCanceled = !this._eventManager.triggerChange(\n        destPos,\n        depaPos,\n        changeOption,\n        true\n      );\n      if (isCanceled) {\n        this._isStopped = true;\n        this._moveDistance = null;\n        this._animationManager.finish(false);\n      }\n    }\n  }\n\n  public release(\n    input: InputType,\n    event,\n    velocity: number[],\n    inputDuration?: number\n  ) {\n    if (\n      this._isStopped ||\n      !this._interruptManager.isInterrupting() ||\n      !this._moveDistance\n    ) {\n      return;\n    }\n    const nativeEvent = event.srcEvent ? event.srcEvent : event;\n    if (nativeEvent.__childrenAxesAlreadyReleased) {\n      velocity = velocity.map(() => 0);\n    }\n    const pos: Axis = this._axisManager.get(input.axes);\n    const depaPos: Axis = this._axisManager.get();\n    const displacement = this._animationManager.getDisplacement(velocity);\n    const offset = toAxis(input.axes, displacement);\n    let destPos: Axis = this._axisManager.get(\n      this._axisManager.map(offset, (v, opt, k) => {\n        if (opt.circular && (opt.circular[0] || opt.circular[1])) {\n          return pos[k] + v;\n        } else {\n          return getInsidePosition(\n            pos[k] + v,\n            opt.range,\n            opt.circular as boolean[],\n            opt.bounce as number[]\n          );\n        }\n      })\n    );\n    nativeEvent.__childrenAxesAlreadyReleased = true;\n    const duration = this._animationManager.getDuration(\n      destPos,\n      pos,\n      inputDuration\n    );\n\n    if (duration === 0) {\n      destPos = { ...depaPos };\n    }\n    // prepare params\n    const param: AnimationParam = {\n      depaPos,\n      destPos,\n      duration,\n      delta: this._axisManager.getDelta(depaPos, destPos),\n      inputEvent: event,\n      input,\n      isTrusted: true,\n    };\n    this._eventManager.triggerRelease(param);\n    this._moveDistance = null;\n\n    // to contol\n    const userWish = this._animationManager.getUserControl(param);\n    const isEqual = equal(userWish.destPos, depaPos);\n    const changeOption: ChangeEventOption = {\n      input,\n      event,\n    };\n    if (isEqual || userWish.duration === 0) {\n      if (!isEqual) {\n        this._eventManager.triggerChange(\n          userWish.destPos,\n          depaPos,\n          changeOption,\n          true\n        );\n      }\n      this._interruptManager.setInterrupt(false);\n      if (this._axisManager.isOutside()) {\n        this._animationManager.restore(changeOption);\n      } else {\n        this._eventManager.triggerFinish(true);\n      }\n    } else {\n      this._animationManager.animateTo(\n        userWish.destPos,\n        userWish.duration,\n        changeOption\n      );\n    }\n  }\n\n  // when move pointer is held in outside\n  private _atOutside(pos: Axis) {\n    if (this._isOutside) {\n      return this._axisManager.map(pos, (v, opt) => {\n        const tn = opt.range[0] - (opt.bounce[0] as number);\n        const tx = opt.range[1] + (opt.bounce[1] as number);\n        return v > tx ? tx : v < tn ? tn : v;\n      });\n    } else {\n      return this._axisManager.map(pos, (v, opt) => {\n        const min = opt.range[0];\n        const max = opt.range[1];\n        const out = opt.bounce;\n        const circular = opt.circular;\n\n        if (circular && (circular[0] || circular[1])) {\n          return v;\n        } else if (v < min) {\n          // left\n          return (\n            min - this._animationManager.interpolate(min - v, out[0] as number)\n          );\n        } else if (v > max) {\n          // right\n          return (\n            max + this._animationManager.interpolate(v - max, out[1] as number)\n          );\n        }\n        return v;\n      });\n    }\n  }\n\n  private _isEndofAxis(offset: Axis, depaPos: Axis, destPos: Axis) {\n    return this._axisManager.every(\n      depaPos,\n      (value, option, key) =>\n        offset[key] === 0 ||\n        (depaPos[key] === destPos[key] &&\n          isEndofBounce(\n            value,\n            option.range,\n            option.bounce as number[],\n            option.circular as boolean[]\n          ))\n    );\n  }\n}\n","import {\n  getInsidePosition,\n  isCircularable,\n  getCirculatedPos,\n  getDuration,\n} from \"../Coordinate\";\nimport { Axis, AxisManager } from \"../AxisManager\";\nimport { InterruptManager } from \"../InterruptManager\";\nimport { EventManager, ChangeEventOption } from \"../EventManager\";\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  map,\n  every,\n  filter,\n  equal,\n  roundNumber,\n  getDecimalPlace,\n  inversePow,\n} from \"../utils\";\nimport { AxesOption } from \"../Axes\";\nimport {\n  AnimationParam,\n  ObjectInterface,\n  UpdateAnimationOption,\n} from \"../types\";\n\nexport interface AnimationState {\n  pos: Axis;\n  easingPer: number;\n  finished: boolean;\n}\n\nconst clamp = (value: number, min: number, max: number): number => {\n  return Math.max(Math.min(value, max), min);\n};\n\nexport abstract class AnimationManager {\n  public interruptManager: InterruptManager;\n  public eventManager: EventManager;\n  public axisManager: AxisManager;\n  protected _options: AxesOption;\n  protected _animateParam: AnimationParam;\n  private _raf: number;\n\n  public constructor({\n    options,\n    interruptManager,\n    eventManager,\n    axisManager,\n  }: {\n    options: AxesOption;\n    interruptManager: InterruptManager;\n    eventManager: EventManager;\n    axisManager: AxisManager;\n  }) {\n    this._options = options;\n    this.interruptManager = interruptManager;\n    this.eventManager = eventManager;\n    this.axisManager = axisManager;\n    this.animationEnd = this.animationEnd.bind(this);\n  }\n\n  public abstract interpolate(displacement: number, threshold: number): number;\n\n  public abstract updateAnimation(options: UpdateAnimationOption): void;\n\n  protected abstract _initState(info: AnimationParam): AnimationState;\n\n  protected abstract _getNextState(prevState: AnimationState): AnimationState;\n\n  public getDuration(\n    depaPos: Axis,\n    destPos: Axis,\n    wishDuration?: number\n  ): number {\n    let duration: number;\n    if (typeof wishDuration !== \"undefined\") {\n      duration = wishDuration;\n    } else {\n      const durations: Axis = map(destPos, (v, k) =>\n        getDuration(Math.abs(v - depaPos[k]), this._options.deceleration)\n      );\n      duration = Object.keys(durations).reduce(\n        (max, v) => Math.max(max, durations[v]),\n        -Infinity\n      );\n    }\n    return clamp(\n      duration,\n      this._options.minimumDuration,\n      this._options.maximumDuration\n    );\n  }\n\n  public getDisplacement(velocity: number[]): number[] {\n    const totalVelocity = Math.pow(\n      velocity.reduce((total, v) => total + v * v, 0),\n      1 / velocity.length\n    );\n    const duration = Math.abs(totalVelocity / -this._options.deceleration);\n    return velocity.map((v) => (v / 2) * duration);\n  }\n\n  public stopAnimation(option?: ChangeEventOption): void {\n    if (this._animateParam) {\n      const orgPos: Axis = this.axisManager.get();\n      const pos: Axis = this.axisManager.map(orgPos, (v, opt) =>\n        getCirculatedPos(v, opt.range, opt.circular as boolean[])\n      );\n      if (!every(pos, (v, k) => orgPos[k] === v)) {\n        this.eventManager.triggerChange(pos, orgPos, option, !!option);\n      }\n      this._animateParam = null;\n      if (this._raf) {\n        cancelAnimationFrame(this._raf);\n      }\n      this._raf = null;\n      this.eventManager.triggerAnimationEnd(!!option?.event);\n    }\n  }\n\n  public getEventInfo(): ChangeEventOption {\n    if (\n      this._animateParam &&\n      this._animateParam.input &&\n      this._animateParam.inputEvent\n    ) {\n      return {\n        input: this._animateParam.input,\n        event: this._animateParam.inputEvent,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  public restore(option: ChangeEventOption): void {\n    const pos: Axis = this.axisManager.get();\n    const destPos: Axis = this.axisManager.map(pos, (v, opt) =>\n      Math.min(opt.range[1], Math.max(opt.range[0], v))\n    );\n    this.stopAnimation();\n    this.animateTo(destPos, this.getDuration(pos, destPos), option);\n  }\n\n  public animationEnd(): void {\n    const beforeParam: ChangeEventOption = this.getEventInfo();\n    this._animateParam = null;\n\n    // for Circular\n    const circularTargets = this.axisManager.filter(\n      this.axisManager.get(),\n      (v, opt) => isCircularable(v, opt.range, opt.circular as boolean[])\n    );\n    if (Object.keys(circularTargets).length > 0) {\n      this.setTo(\n        this.axisManager.map(circularTargets, (v, opt) =>\n          getCirculatedPos(v, opt.range, opt.circular as boolean[])\n        )\n      );\n    }\n    this.interruptManager.setInterrupt(false);\n    this.eventManager.triggerAnimationEnd(!!beforeParam);\n    if (this.axisManager.isOutside()) {\n      this.restore(beforeParam);\n    } else {\n      this.finish(!!beforeParam);\n    }\n  }\n\n  public finish(isTrusted: boolean): void {\n    this._animateParam = null;\n    this.interruptManager.setInterrupt(false);\n    this.eventManager.triggerFinish(isTrusted);\n  }\n\n  public getUserControl(param: AnimationParam): {\n    destPos: Axis;\n    duration: number;\n  } {\n    const userWish = param.setTo();\n    userWish.destPos = this.axisManager.get(userWish.destPos);\n    userWish.duration = clamp(\n      userWish.duration,\n      this._options.minimumDuration,\n      this._options.maximumDuration\n    );\n    return userWish;\n  }\n\n  public animateTo(\n    destPos: Axis,\n    duration: number,\n    option?: ChangeEventOption\n  ): void {\n    this.stopAnimation();\n    const param: AnimationParam = this._createAnimationParam(\n      destPos,\n      duration,\n      option\n    );\n    const depaPos = { ...param.depaPos };\n    const retTrigger = this.eventManager.triggerAnimationStart(param);\n\n    // to control\n    const userWish = this.getUserControl(param);\n\n    // You can't stop the 'animationStart' event when 'circular' is true.\n    if (\n      !retTrigger &&\n      this.axisManager.every(userWish.destPos, (v, opt) =>\n        isCircularable(v, opt.range, opt.circular as boolean[])\n      )\n    ) {\n      console.warn(\n        \"You can't stop the 'animation' event when 'circular' is true.\"\n      );\n    }\n\n    if (retTrigger && !equal(userWish.destPos, depaPos)) {\n      const inputEvent = option?.event || null;\n      this._animateLoop(\n        {\n          depaPos,\n          destPos: userWish.destPos,\n          duration: userWish.duration,\n          delta: this.axisManager.getDelta(depaPos, userWish.destPos),\n          isTrusted: !!inputEvent,\n          inputEvent,\n          input: option?.input || null,\n        },\n        () => this.animationEnd()\n      );\n    }\n  }\n\n  public setTo(pos: Axis, duration: number = 0) {\n    const axes: string[] = Object.keys(pos);\n    const orgPos: Axis = this.axisManager.get(axes);\n\n    if (equal(pos, orgPos)) {\n      return this;\n    }\n    this.interruptManager.setInterrupt(true);\n    let movedPos = filter(pos, (v, k) => orgPos[k] !== v);\n    if (!Object.keys(movedPos).length) {\n      return this;\n    }\n\n    movedPos = this.axisManager.map(movedPos, (v, opt) => {\n      const { range, circular } = opt;\n\n      if (circular && (circular[0] || circular[1])) {\n        return v;\n      } else {\n        return getInsidePosition(v, range, circular as boolean[]);\n      }\n    });\n\n    if (equal(movedPos, orgPos)) {\n      return this;\n    }\n\n    if (duration > 0) {\n      this.animateTo(movedPos, duration);\n    } else {\n      this.stopAnimation();\n      this.eventManager.triggerChange(movedPos);\n      this.finish(false);\n    }\n\n    return this;\n  }\n\n  public setBy(pos: Axis, duration = 0) {\n    return this.setTo(\n      map(this.axisManager.get(Object.keys(pos)), (v, k) => v + pos[k]),\n      duration\n    );\n  }\n\n  private _createAnimationParam(\n    pos: Axis,\n    duration: number,\n    option?: ChangeEventOption\n  ): AnimationParam {\n    const depaPos: Axis = this.axisManager.get();\n    const destPos: Axis = pos;\n    const inputEvent = option?.event || null;\n    return {\n      depaPos,\n      destPos,\n      duration: clamp(\n        duration,\n        this._options.minimumDuration,\n        this._options.maximumDuration\n      ),\n      delta: this.axisManager.getDelta(depaPos, destPos),\n      inputEvent,\n      input: option?.input || null,\n      isTrusted: !!inputEvent,\n      done: this.animationEnd,\n    };\n  }\n\n  private _animateLoop(param: AnimationParam, complete: () => void): void {\n    if (param.duration) {\n      this._animateParam = {\n        ...param,\n        startTime: new Date().getTime(),\n      };\n      const originalIntendedPos = map(param.destPos, (v) => v);\n      let state = this._initState(this._animateParam);\n\n      const loop = () => {\n        this._raf = null;\n        const animateParam = this._animateParam;\n        const nextState = this._getNextState(state);\n        const isCanceled = !this.eventManager.triggerChange(\n          nextState.pos,\n          state.pos\n        );\n\n        state = nextState;\n\n        if (nextState.finished) {\n          animateParam.destPos = this._getFinalPos(\n            animateParam.destPos,\n            originalIntendedPos\n          );\n          if (\n            !equal(\n              animateParam.destPos,\n              this.axisManager.get(Object.keys(animateParam.destPos))\n            )\n          ) {\n            this.eventManager.triggerChange(\n              animateParam.destPos,\n              nextState.pos\n            );\n          }\n          complete();\n          return;\n        } else if (isCanceled) {\n          this.finish(false);\n        } else {\n          this._raf = requestAnimationFrame(loop);\n        }\n      };\n      loop();\n    } else {\n      this.eventManager.triggerChange(param.destPos);\n      complete();\n    }\n  }\n\n  /**\n   * Get estimated final value.\n   *\n   * If destPos is within the 'error range' of the original intended position, the initial intended position is returned.\n   *   - eg. original intended pos: 100, destPos: 100.0000000004 ==> return 100;\n   * If dest Pos is outside the 'range of error' compared to the originally intended pos, it is returned rounded based on the originally intended pos.\n   *   - eg. original intended pos: 100.123 destPos: 50.12345 => return 50.123\n   * @param originalIntendedPos\n   * @param destPos\n   */\n  private _getFinalPos(\n    destPos: ObjectInterface<number>,\n    originalIntendedPos: ObjectInterface<number>\n  ): Axis {\n    // compare destPos and originalIntendedPos\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const ERROR_LIMIT = 0.000001;\n    const finalPos = map(destPos, (value, key) => {\n      if (\n        value >= originalIntendedPos[key] - ERROR_LIMIT &&\n        value <= originalIntendedPos[key] + ERROR_LIMIT\n      ) {\n        // In error range, return original intended\n        return originalIntendedPos[key];\n      } else {\n        // Out of error range, return rounded pos.\n        const roundUnit = this._getRoundUnit(value, key);\n        const result = roundNumber(value, roundUnit);\n        return result;\n      }\n    });\n    return finalPos;\n  }\n\n  private _getRoundUnit(val: number, key: string): number {\n    const roundUnit = this._options.round; // manual mode\n    let minRoundUnit = null; // auto mode\n\n    // auto mode\n    if (!roundUnit) {\n      // Get minimum round unit\n      const options = this.axisManager.getAxisOptions(key);\n      minRoundUnit = inversePow(\n        Math.max(\n          getDecimalPlace(options.range[0]),\n          getDecimalPlace(options.range[1]),\n          getDecimalPlace(val)\n        )\n      );\n    }\n\n    return minRoundUnit || roundUnit;\n  }\n}\n","import { AxesOption } from \"../Axes\";\nimport { Axis } from \"../AxisManager\";\nimport { getCirculatedPos } from \"../Coordinate\";\nimport { AnimationParam, UpdateAnimationOption } from \"../types\";\nimport { map } from \"../utils\";\n\nimport { AnimationManager, AnimationState } from \"./AnimationManager\";\n\nexport class EasingManager extends AnimationManager {\n  protected _useDuration = true;\n  protected _options: AxesOption;\n  private _durationOffset: number;\n  private _initialEasingPer: number;\n  private _prevEasingPer: number;\n\n  public interpolate(displacement: number, threshold: number): number {\n    const initSlope = this._easing(0.00001) / 0.00001;\n    return this._easing(displacement / (threshold * initSlope)) * threshold;\n  }\n\n  public updateAnimation(options: UpdateAnimationOption): void {\n    const animateParam = this._animateParam;\n    if (!animateParam) {\n      return;\n    }\n\n    const diffTime = new Date().getTime() - animateParam.startTime;\n    const pos = options?.destPos || animateParam.destPos;\n    const duration = options?.duration || animateParam.duration;\n    if (options?.restart || duration <= diffTime) {\n      this.setTo(pos, duration - diffTime);\n      return;\n    }\n    if (options?.destPos) {\n      const currentPos = this.axisManager.get();\n      // When destination is changed, new delta should be calculated as remaining percent.\n      // For example, moving x:0, y:0 to x:200, y:200 and it has current easing percent of 92%. coordinate is x:184 and y:184\n      // If destination changes to x:300, y:300. xdelta:200, ydelta:200 changes to xdelta:116, ydelta:116 and use remaining easingPer as 100%, not 8% as previous.\n      // Therefore, original easingPer by time is kept. And divided by (1 - self._initialEasingPer) which means new total easing percent. Like calculating 8% as 100%.\n      this._initialEasingPer = this._prevEasingPer;\n      animateParam.delta = this.axisManager.getDelta(currentPos, pos);\n      animateParam.destPos = pos;\n    }\n    if (options?.duration) {\n      const ratio = (diffTime + this._durationOffset) / animateParam.duration;\n      // Use durationOffset for keeping animation ratio after duration is changed.\n      // newRatio = (diffTime + newDurationOffset) / newDuration = oldRatio\n      // newDurationOffset = oldRatio * newDuration - diffTime\n      this._durationOffset = ratio * duration - diffTime;\n      animateParam.duration = duration;\n    }\n  }\n\n  protected _initState(info: AnimationParam): AnimationState {\n    this._initialEasingPer = 0;\n    this._prevEasingPer = 0;\n    this._durationOffset = 0;\n    return {\n      pos: info.depaPos,\n      easingPer: 0,\n      finished: false,\n    };\n  }\n\n  protected _getNextState(prevState: AnimationState): AnimationState {\n    const animateParam = this._animateParam;\n    const prevPos = prevState.pos;\n    const destPos = animateParam.destPos;\n    const directions = map(prevPos, (value, key) => {\n      return value <= destPos[key] ? 1 : -1;\n    });\n    const diffTime = new Date().getTime() - animateParam.startTime;\n    const ratio = (diffTime + this._durationOffset) / animateParam.duration;\n    const easingPer = this._easing(ratio);\n\n    const toPos: Axis = this.axisManager.map(prevPos, (pos, options, key) => {\n      const nextPos =\n        ratio >= 1\n          ? destPos[key]\n          : pos +\n            (animateParam.delta[key] * (easingPer - this._prevEasingPer)) /\n              (1 - this._initialEasingPer);\n\n      // Subtract distance from distance already moved.\n      // Recalculate the remaining distance.\n      // Fix the bouncing phenomenon by changing the range.\n      const circulatedPos = getCirculatedPos(\n        nextPos,\n        options.range,\n        options.circular as boolean[]\n      );\n      if (nextPos !== circulatedPos) {\n        // circular\n        const rangeOffset =\n          directions[key] * (options.range[1] - options.range[0]);\n\n        destPos[key] -= rangeOffset;\n        prevPos[key] -= rangeOffset;\n      }\n      return circulatedPos;\n    });\n    this._prevEasingPer = easingPer;\n    return {\n      pos: toPos,\n      easingPer,\n      finished: easingPer >= 1,\n    };\n  }\n\n  private _easing(p: number): number {\n    return p > 1 ? 1 : this._options.easing(p);\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Component from \"@egjs/component\";\n\nimport { ReactiveSubscribe } from \"./cfcs\";\nimport { EventManager } from \"./EventManager\";\nimport { InterruptManager } from \"./InterruptManager\";\nimport { AxisManager, AxisOption, Axis } from \"./AxisManager\";\nimport { InputObserver } from \"./InputObserver\";\nimport {\n  TRANSFORM,\n  DIRECTION_NONE,\n  DIRECTION_LEFT,\n  DIRECTION_RIGHT,\n  DIRECTION_UP,\n  DIRECTION_DOWN,\n  DIRECTION_HORIZONTAL,\n  DIRECTION_VERTICAL,\n  DIRECTION_ALL,\n} from \"./const\";\nimport { InputType } from \"./inputType/InputType\";\nimport {\n  AxesEvents,\n  AxesReactiveState,\n  ObjectInterface,\n  UpdateAnimationOption,\n} from \"./types\";\nimport { getInitialPos } from \"./utils\";\nimport { EasingManager } from \"./animation/EasingManager\";\nimport { AnimationManager } from \"./animation/AnimationManager\";\n\nexport interface AxesOption {\n  easing?: (x: number) => number;\n  maximumDuration?: number;\n  minimumDuration?: number;\n  deceleration?: number;\n  interruptable?: boolean;\n  round?: number;\n  nested?: boolean;\n}\n\n/**\n * @typedef {Object} AxisOption The Axis information. The key of the axis specifies the name to use as the logical virtual coordinate system.\n * @ko 축 정보. 축의 키는 논리적인 가상 좌표계로 사용할 이름을 지정한다.\n * @param {Number[]} [range] The coordinate of range <ko>좌표 범위</ko>\n * @param {Number} [range[0]=0] The coordinate of the minimum <ko>최소 좌표</ko>\n * @param {Number} [range[1]=0] The coordinate of the maximum <ko>최대 좌표</ko>\n * @param {Number[]} [bounce] The size of bouncing area. The coordinates can exceed the coordinate area as much as the bouncing area based on user action. If the coordinates does not exceed the bouncing area when an element is dragged, the coordinates where bouncing effects are applied are retuned back into the coordinate area<ko>바운스 영역의 크기. 사용자의 동작에 따라 좌표가 좌표 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 사용자가 끌어다 놓는 동작을 했을 때 좌표가 바운스 영역에 있으면, 바운스 효과가 적용된 좌표가 다시 좌표 영역 안으로 들어온다</ko>\n * @param {Number} [bounce[0]=0] The size of coordinate of the minimum area <ko>최소 좌표 바운스 영역의 크기</ko>\n * @param {Number} [bounce[1]=0] The size of coordinate of the maximum area <ko>최대 좌표 바운스 영역의 크기</ko>\n * @param {Boolean[]} [circular] Indicates whether a circular element is available. If it is set to \"true\" and an element is dragged outside the coordinate area, the element will appear on the other side.<ko>순환 여부. 'true'로 설정한 방향의 좌표 영역 밖으로 엘리먼트가 이동하면 반대 방향에서 엘리먼트가 나타난다</ko>\n * @param {Boolean} [circular[0]=false] Indicates whether to circulate to the coordinate of the minimum <ko>최소 좌표 방향의 순환 여부</ko>\n * @param {Boolean} [circular[1]=false] Indicates whether to circulate to the coordinate of the maximum <ko>최대 좌표 방향의 순환 여부</ko>\n * @param {Number} [startPos=range[0]] The coordinates to be moved when creating an instance <ko>인스턴스 생성시 이동할 좌표</ko>\n **/\n\n/**\n * @typedef {Object} AxesOption The option object of the eg.Axes module\n * @ko eg.Axes 모듈의 옵션 객체\n * @param {Function} [easing=easing.easeOutCubic] The easing function to apply to an animation <ko>애니메이션에 적용할 easing 함수</ko>\n * @param {Number} [maximumDuration=Infinity] Maximum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최대 좌표 이동 시간</ko>\n * @param {Number} [minimumDuration=0] Minimum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최소 좌표 이동 시간</ko>\n * @param {Number} [deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time. <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n * @param {Boolean} [interruptable=true] Indicates whether an animation is interruptible.\n * - true: It can be paused or stopped by user action or the API.\n * - false: It cannot be paused or stopped by user action or the API while it is running.\n * <ko>진행 중인 애니메이션 중지 가능 여부.\n * - true: 사용자의 동작이나 API로 애니메이션을 중지할 수 있다.\n * - false: 애니메이션이 진행 중일 때는 사용자의 동작이나 API가 적용되지 않는다</ko>\n * @param {Number} [round=null] Rounding unit. For example, 0.1 rounds to 0.1 decimal point(6.1234 => 6.1), 5 rounds to 5 (93 => 95)\n * [Details](https://github.com/naver/egjs-axes/wiki/round-option)<ko>반올림 단위. 예를 들어 0.1 은 소숫점 0.1 까지 반올림(6.1234 => 6.1), 5 는 5 단위로 반올림(93 => 95).\n * [상세내용](https://github.com/naver/egjs-axes/wiki/round-option)</ko>\n * @param {Boolean} [nested=false] Whether the event propagates to other instances when the coordinates reach the end of the movable area <ko>좌표가 이동 가능한 영역의 끝까지 도달했을 때 다른 인스턴스들로의 이벤트 전파 여부</ko>\n **/\n\n/**\n * A module used to change the information of user action entered by various input devices such as touch screen or mouse into the logical virtual coordinates. You can easily create a UI that responds to user actions.\n * @ko 터치 입력 장치나 마우스와 같은 다양한 입력 장치를 통해 전달 받은 사용자의 동작을 논리적인 가상 좌표로 변경하는 모듈이다. 사용자 동작에 반응하는 UI를 손쉽게 만들수 있다.\n * @extends eg.Component\n *\n * @param {Object.<string, AxisOption>} axis Axis information managed by eg.Axes. The key of the axis specifies the name to use as the logical virtual coordinate system.  <ko>eg.Axes가 관리하는 축 정보. 축의 키는 논리적인 가상 좌표계로 사용할 이름을 지정한다.</ko>\n * @param {AxesOption} [options={}] The option object of the eg.Axes module<ko>eg.Axes 모듈의 옵션 객체</ko>\n * @param {Object.<string, number>} [startPos=null] The coordinates to be moved when creating an instance. It is applied with higher priority than startPos of axisOption.<ko>인스턴스 생성시 이동할 좌표, axisOption의 startPos보다 높은 우선순위로 적용된다.</ko>\n *\n * @support {\"ie\": \"10+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n * @example\n * ```js\n * // 1. Initialize eg.Axes\n * const axes = new eg.Axes({\n *  something1: {\n *    range: [0, 150],\n *    bounce: 50\n *  },\n *  something2: {\n *    range: [0, 200],\n *    bounce: 100\n *  },\n *  somethingN: {\n *    range: [1, 10],\n *  }\n * }, {\n *  deceleration : 0.0024\n * });\n *\n * // 2. attach event handler\n * axes.on({\n *  \"hold\" : function(evt) {\n *  },\n *  \"release\" : function(evt) {\n *  },\n *  \"animationStart\" : function(evt) {\n *  },\n *  \"animationEnd\" : function(evt) {\n *  },\n *  \"change\" : function(evt) {\n *  }\n * });\n *\n * // 3. Initialize inputTypes\n * const panInputArea = new eg.Axes.PanInput(\"#area\", {\n *  scale: [0.5, 1]\n * });\n * const panInputHmove = new eg.Axes.PanInput(\"#hmove\");\n * const panInputVmove = new eg.Axes.PanInput(\"#vmove\");\n * const pinchInputArea = new eg.Axes.PinchInput(\"#area\", {\n *  scale: 1.5\n * });\n *\n * // 4. Connect eg.Axes and InputTypes\n * // [PanInput] When the mouse or touchscreen is down and moved.\n * // Connect the 'something2' axis to the mouse or touchscreen x position and\n * // connect the 'somethingN' axis to the mouse or touchscreen y position.\n * axes.connect([\"something2\", \"somethingN\"], panInputArea); // or axes.connect(\"something2 somethingN\", panInputArea);\n *\n * // Connect only one 'something1' axis to the mouse or touchscreen x position.\n * axes.connect([\"something1\"], panInputHmove); // or axes.connect(\"something1\", panInputHmove);\n *\n * // Connect only one 'something2' axis to the mouse or touchscreen y position.\n * axes.connect([\"\", \"something2\"], panInputVmove); // or axes.connect(\" something2\", panInputVmove);\n *\n * // [PinchInput] Connect 'something2' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * axes.connect(\"something2\", pinchInputArea);\n * ```\n */\n@ReactiveSubscribe\nclass Axes extends Component<AxesEvents> {\n  /**\n   * @name VERSION\n   * @desc Version info string\n   * @ko 버전정보 문자열\n   *\n   * @constant\n   * @type {String}\n   * @example\n   * ```js\n   * eg.Axes.VERSION;  // ex) 3.3.3\n   * ```\n   */\n  public static VERSION = \"#__VERSION__#\";\n  /* eslint-disable */\n  // for tree shaking\n  public static PanInput;\n  public static PinchInput;\n  public static WheelInput;\n  public static MoveKeyInput;\n  public static RotatePanInput;\n  /* eslint-enable */\n\n  /**\n   * @name TRANSFORM\n   * @desc Returns the transform attribute with CSS vendor prefixes.\n   * @ko CSS vendor prefixes를 붙인 transform 속성을 반환한다.\n   *\n   * @constant\n   * @type {String}\n   * @example\n   * ```js\n   * eg.Axes.TRANSFORM; // \"transform\" or \"webkitTransform\"\n   * ```\n   */\n  public static TRANSFORM = TRANSFORM;\n  /**\n   * @name DIRECTION_NONE\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_NONE = DIRECTION_NONE;\n  /**\n   * @name DIRECTION_LEFT\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_LEFT = DIRECTION_LEFT;\n  /**\n   * @name DIRECTION_RIGHT\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_RIGHT = DIRECTION_RIGHT;\n  /**\n   * @name DIRECTION_UP\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_UP = DIRECTION_UP;\n  /**\n   * @name DIRECTION_DOWN\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_DOWN = DIRECTION_DOWN;\n  /**\n   * @name DIRECTION_HORIZONTAL\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n  /**\n   * @name DIRECTION_VERTICAL\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n  /**\n   * @name DIRECTION_ALL\n   * @constant\n   * @type {Number}\n   */\n  public static DIRECTION_ALL = DIRECTION_ALL;\n\n  public options: AxesOption;\n  public eventManager: EventManager;\n  public axisManager: AxisManager;\n  public interruptManager: InterruptManager;\n  public animationManager: AnimationManager;\n  public inputObserver: InputObserver;\n  private _inputs: InputType[] = [];\n\n  /**\n   *\n   */\n  public constructor(\n    public axis: ObjectInterface<AxisOption> = {},\n    options: AxesOption = {},\n    startPos: Axis = null\n  ) {\n    super();\n    this.options = {\n      ...{\n        easing: (x) => {\n          return 1 - Math.pow(1 - x, 3);\n        },\n        interruptable: true,\n        maximumDuration: Infinity,\n        minimumDuration: 0,\n        deceleration: 0.0006,\n        round: null,\n        nested: false,\n      },\n      ...options,\n    };\n\n    this.interruptManager = new InterruptManager(this.options);\n    this.axisManager = new AxisManager(this.axis);\n    this.eventManager = new EventManager(this);\n    this.animationManager = new EasingManager(this);\n    this.inputObserver = new InputObserver(this);\n    this.eventManager.setAnimationManager(this.animationManager);\n    this.eventManager.triggerChange(getInitialPos(axis, startPos));\n  }\n\n  /**\n   * Connect the axis of eg.Axes to the inputType.\n   * @ko eg.Axes의 축과 inputType을 연결한다\n   * @param {(String[]|String)} axes The name of the axis to associate with inputType <ko>inputType과 연결할 축의 이름</ko>\n   * @param {Object} inputType The inputType instance to associate with the axis of eg.Axes <ko>eg.Axes의 축과 연결할 inputType 인스턴스</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   }\n   * });\n   *\n   * axes.connect(\"x\", new eg.Axes.PanInput(\"#area1\"))\n   *    .connect(\"x xOther\", new eg.Axes.PanInput(\"#area2\"))\n   *    .connect(\" xOther\", new eg.Axes.PanInput(\"#area3\"))\n   *    .connect([\"x\"], new eg.Axes.PanInput(\"#area4\"))\n   *    .connect([\"xOther\", \"x\"], new eg.Axes.PanInput(\"#area5\"))\n   *    .connect([\"\", \"xOther\"], new eg.Axes.PanInput(\"#area6\"));\n   * ```\n   */\n  public connect(axes: string[] | string, inputType: InputType) {\n    let mapped: string[];\n    if (typeof axes === \"string\") {\n      mapped = axes.split(\" \");\n    } else {\n      mapped = axes.concat();\n    }\n\n    // check same instance\n    if (~this._inputs.indexOf(inputType)) {\n      this.disconnect(inputType);\n    }\n\n    inputType.mapAxes(mapped);\n    inputType.connect(this.inputObserver);\n    this._inputs.push(inputType);\n    return this;\n  }\n\n  /**\n   * Disconnect the axis of eg.Axes from the inputType.\n   * @ko eg.Axes의 축과 inputType의 연결을 끊는다.\n   * @param {Object} [inputType] An inputType instance associated with the axis of eg.Axes <ko>eg.Axes의 축과 연결한 inputType 인스턴스</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   }\n   * });\n   *\n   * const input1 = new eg.Axes.PanInput(\"#area1\");\n   * const input2 = new eg.Axes.PanInput(\"#area2\");\n   * const input3 = new eg.Axes.PanInput(\"#area3\");\n   *\n   * axes.connect(\"x\", input1);\n   *    .connect(\"x xOther\", input2)\n   *    .connect([\"xOther\", \"x\"], input3);\n   *\n   * axes.disconnect(input1); // disconnects input1\n   * axes.disconnect(); // disconnects all of them\n   * ```\n   */\n  public disconnect(inputType?: InputType) {\n    if (inputType) {\n      const index = this._inputs.indexOf(inputType);\n\n      if (index >= 0) {\n        this._inputs[index].disconnect();\n        this._inputs.splice(index, 1);\n      }\n    } else {\n      this._inputs.forEach((v) => v.disconnect());\n      this._inputs = [];\n    }\n    return this;\n  }\n\n  /**\n   * Returns the current position of the coordinates.\n   * @ko 좌표의 현재 위치를 반환한다\n   * @param {Object} [axes] The names of the axis <ko>축 이름들</ko>\n   * @return {Object.<string, number>} Axis coordinate information <ko>축 좌표 정보</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   *    \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.get(); // {\"x\": 0, \"xOther\": -100, \"zoom\": 50}\n   * axes.get([\"x\", \"zoom\"]); // {\"x\": 0, \"zoom\": 50}\n   * ```\n   */\n  public get(axes?: string[]) {\n    return this.axisManager.get(axes);\n  }\n\n  /**\n   * Moves an axis to specific coordinates.\n   * @ko 좌표를 이동한다.\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   *    \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.setTo({\"x\": 30, \"zoom\": 60});\n   * axes.get(); // {\"x\": 30, \"xOther\": -100, \"zoom\": 60}\n   *\n   * axes.setTo({\"x\": 100, \"xOther\": 60}, 1000); // animatation\n   *\n   * // after 1000 ms\n   * axes.get(); // {\"x\": 100, \"xOther\": 60, \"zoom\": 60}\n   * ```\n   */\n  public setTo(pos: Axis, duration = 0) {\n    this.animationManager.setTo(pos, duration);\n    return this;\n  }\n\n  /**\n   * Moves an axis from the current coordinates to specific coordinates.\n   * @ko 현재 좌표를 기준으로 좌표를 이동한다.\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   *    \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.setBy({\"x\": 30, \"zoom\": 10});\n   * axes.get(); // {\"x\": 30, \"xOther\": -100, \"zoom\": 60}\n   *\n   * axes.setBy({\"x\": 70, \"xOther\": 60}, 1000); // animatation\n   *\n   * // after 1000 ms\n   * axes.get(); // {\"x\": 100, \"xOther\": -40, \"zoom\": 60}\n   * ```\n   */\n  public setBy(pos: Axis, duration = 0) {\n    this.animationManager.setBy(pos, duration);\n    return this;\n  }\n\n  /**\n   * Stop an animation in progress.\n   * @ko 재생 중인 애니메이션을 정지한다.\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   * });\n   *\n   * axes.setTo({\"x\": 10}, 1000); // start animatation\n   *\n   * // after 500 ms\n   * axes.stopAnimation(); // stop animation during movement.\n   * ```\n   */\n  public stopAnimation() {\n    this.animationManager.stopAnimation();\n    return this;\n  }\n\n  /**\n   * Change the destination of an animation in progress.\n   * @ko 재생 중인 애니메이션의 목적지와 진행 시간을 변경한다.\n   * @param {UpdateAnimationOption} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 200]\n   *   },\n   *   \"y\": {\n   *      range: [0, 200]\n   *   }\n   * });\n   *\n   * axes.setTo({\"x\": 50, \"y\": 50}, 1000); // trigger animation by setTo\n   *\n   * // after 500 ms\n   * axes.updateAnimation({destPos: {\"x\": 100, \"y\": 100}}); // animation will end after 500 ms, at {\"x\": 100, \"y\": 100}\n   *\n   * // after 500 ms\n   * axes.setTo({\"x\": 50, \"y\": 50}, 1000); // trigger animation by setTo\n   *\n   * // after 700 ms\n   * axes.updateAnimation({destPos: {\"x\": 100, \"y\": 100}, duration: 1500, restart: true}); // this works same as axes.setTo({\"x\": 100, \"y\": 100}, 800) since restart is true.\n   * ```\n   */\n  public updateAnimation(options: UpdateAnimationOption) {\n    this.animationManager.updateAnimation(options);\n    return this;\n  }\n\n  /**\n   * Returns whether there is a coordinate in the bounce area of ​​the target axis.\n   * @ko 대상 축 중 bounce영역에 좌표가 존재하는지를 반환한다\n   * @param {Object} [axes] The names of the axis <ko>축 이름들</ko>\n   * @return {Boolen} Whether the bounce area exists. <ko>bounce 영역 존재 여부</ko>\n   * @example\n   * ```js\n   * const axes = new eg.Axes({\n   *   \"x\": {\n   *      range: [0, 100]\n   *   },\n   *   \"xOther\": {\n   *      range: [-100, 100]\n   *   },\n   *    \"zoom\": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.isBounceArea([\"x\"]);\n   * axes.isBounceArea([\"x\", \"zoom\"]);\n   * axes.isBounceArea();\n   * ```\n   */\n  public isBounceArea(axes?: string[]) {\n    return this.axisManager.isOutside(axes);\n  }\n\n  /**\n   * Destroys properties, and events used in a module and disconnect all connections to inputTypes.\n   * @ko 모듈에 사용한 속성, 이벤트를 해제한다. 모든 inputType과의 연결을 끊는다.\n   */\n  public destroy() {\n    this.disconnect();\n    this.eventManager.destroy();\n  }\n}\n\ninterface Axes\n  extends AxesReactiveState,\n    ReactiveSubscribe<AxesReactiveState> {}\n\nexport default Axes;\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable @typescript-eslint/no-empty-function */\n\nimport {\n  $,\n  isCssPropsFromAxes,\n  setCssProps,\n  revertCssProps,\n  useDirection,\n  getDirection,\n} from \"../utils\";\nimport {\n  IS_IOS_SAFARI,\n  IOS_EDGE_THRESHOLD,\n  DIRECTION_NONE,\n  DIRECTION_VERTICAL,\n  DIRECTION_HORIZONTAL,\n  MOUSE_LEFT,\n} from \"../const\";\nimport { ActiveEvent, ElementType, InputEventType } from \"../types\";\n\nimport {\n  convertInputType,\n  InputType,\n  InputTypeObserver,\n  toAxis,\n} from \"./InputType\";\n\nexport interface PanInputOption {\n  inputType?: string[];\n  inputButton?: string[];\n  scale?: number[];\n  thresholdAngle?: number;\n  threshold?: number;\n  iOSEdgeSwipeThreshold?: number;\n  releaseOnScroll?: boolean;\n  touchAction?: string;\n}\n\n// get user's direction\nexport const getDirectionByAngle = (\n  angle: number,\n  thresholdAngle: number\n): number => {\n  if (thresholdAngle < 0 || thresholdAngle > 90) {\n    return DIRECTION_NONE;\n  }\n  const toAngle = Math.abs(angle);\n\n  return toAngle > thresholdAngle && toAngle < 180 - thresholdAngle\n    ? DIRECTION_VERTICAL\n    : DIRECTION_HORIZONTAL;\n};\n\n/**\n * @typedef {Object} PanInputOption The option object of the eg.Axes.PanInput module.\n * @ko eg.Axes.PanInput 모듈의 옵션 객체\n * @param {String[]} [inputType=[\"touch\", \"mouse\", \"pointer\"]] Types of input devices\n * - touch: Touch screen\n * - mouse: Mouse\n * - pointer: Mouse and touch <ko>입력 장치 종류\n * - touch: 터치 입력 장치\n * - mouse: 마우스\n * - pointer: 마우스 및 터치</ko>\n * @param {String[]} [inputButton=[\"left\"]] List of buttons to allow input\n * - left: Left mouse button and normal touch\n * - middle: Mouse wheel press\n * - right: Right mouse button <ko>입력을 허용할 버튼 목록\n * - left: 마우스 왼쪽 버튼\n * - middle: 마우스 휠 눌림\n * - right: 마우스 오른쪽 버튼 </ko>\n * @param {Number[]} [scale] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @param {Number} [scale[0]=1] horizontal axis scale <ko>수평축 배율</ko>\n * @param {Number} [scale[1]=1] vertical axis scale <ko>수직축 배율</ko>\n * @param {Number} [thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n * @param {Number} [threshold=0] Minimal pan distance required before recognizing <ko>사용자의 Pan 동작을 인식하기 위해산 최소한의 거리</ko>\n * @param {Number} [iOSEdgeSwipeThreshold=30] Area (px) that can go to the next page when swiping the right edge in iOS safari <ko>iOS Safari에서 오른쪽 엣지를 스와이프 하는 경우 다음 페이지로 넘어갈 수 있는 영역(px)</ko>\n * @param {String} [touchAction=null] Value that overrides the element's \"touch-action\" css property. If set to null, it is automatically set to prevent scrolling in the direction of the connected axis. <ko>엘리먼트의 \"touch-action\" CSS 속성을 덮어쓰는 값. 만약 null로 설정된 경우, 연결된 축 방향으로의 스크롤을 방지하게끔 자동으로 설정된다.</ko>\n **/\n/**\n * A module that passes the amount of change to eg.Axes when the mouse or touchscreen is down and moved. use less than two axes.\n * @ko 마우스나 터치 스크린을 누르고 움직일때의 변화량을 eg.Axes에 전달하는 모듈. 두개 이하의 축을 사용한다.\n *\n * @example\n * ```js\n * const pan = new eg.Axes.PanInput(\"#area\", {\n * \t\tinputType: [\"touch\"],\n * \t\tscale: [1, 1.3],\n * });\n *\n * // Connect the 'something2' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n * // Connect the 'somethingN' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\n * axes.connect([\"something2\", \"somethingN\"], pan); // or axes.connect(\"something2 somethingN\", pan);\n *\n * // Connect only one 'something1' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n * axes.connect([\"something1\"], pan); // or axes.connect(\"something1\", pan);\n *\n * // Connect only one 'something2' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\n * axes.connect([\"\", \"something2\"], pan); // or axes.connect(\" something2\", pan);\n * ```\n * @param {String|HTMLElement|Ref<HTMLElement>|jQuery} element An element to use the eg.Axes.PanInput module <ko>eg.Axes.PanInput 모듈을 사용할 엘리먼트</ko>\n * @param {PanInputOption} [options={}] The option object of the eg.Axes.PanInput module<ko>eg.Axes.PanInput 모듈의 옵션 객체</ko>\n */\nexport class PanInput implements InputType {\n  public options: PanInputOption;\n  public axes: string[] = [];\n  public element: HTMLElement = null;\n  protected _observer: InputTypeObserver;\n  protected _direction: number;\n  protected _enabled = false;\n  protected _activeEvent: ActiveEvent = null;\n  private _originalCssProps: { [key: string]: string };\n  private _atRightEdge = false;\n  private _rightEdgeTimer = 0;\n\n  /**\n   *\n   */\n  public constructor(el: ElementType, options?: PanInputOption) {\n    this.element = $(el);\n    this.options = {\n      inputType: [\"touch\", \"mouse\", \"pointer\"],\n      inputButton: [MOUSE_LEFT],\n      scale: [1, 1],\n      thresholdAngle: 45,\n      threshold: 0,\n      iOSEdgeSwipeThreshold: IOS_EDGE_THRESHOLD,\n      releaseOnScroll: false,\n      touchAction: null,\n      ...options,\n    };\n    this._onPanstart = this._onPanstart.bind(this);\n    this._onPanmove = this._onPanmove.bind(this);\n    this._onPanend = this._onPanend.bind(this);\n  }\n\n  public mapAxes(axes: string[]) {\n    this._direction = getDirection(!!axes[0], !!axes[1]);\n    this.axes = axes;\n  }\n\n  public connect(observer: InputTypeObserver): InputType {\n    if (this._activeEvent) {\n      this._detachElementEvent();\n      this._detachWindowEvent(this._activeEvent);\n    }\n    this._attachElementEvent(observer);\n    this._originalCssProps = setCssProps(\n      this.element,\n      this.options,\n      this._direction\n    );\n    return this;\n  }\n\n  public disconnect() {\n    this._detachElementEvent();\n    this._detachWindowEvent(this._activeEvent);\n    if (!isCssPropsFromAxes(this._originalCssProps)) {\n      revertCssProps(this.element, this._originalCssProps);\n    }\n    this._direction = DIRECTION_NONE;\n    return this;\n  }\n\n  /**\n   * Destroys elements, properties, and events used in a module.\n   * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n   */\n  public destroy() {\n    this.disconnect();\n    this.element = null;\n  }\n\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @return {PanInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public enable() {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @return {PanInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public disable() {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n  public isEnabled() {\n    return this._enabled;\n  }\n\n  protected _onPanstart(event: InputEventType) {\n    const activeEvent = this._activeEvent;\n    const panEvent = activeEvent.onEventStart(event, this.options.inputButton);\n    if (!panEvent || !this._enabled || activeEvent.getTouches(event) > 1) {\n      return;\n    }\n\n    if (panEvent.srcEvent.cancelable !== false) {\n      const edgeThreshold = this.options.iOSEdgeSwipeThreshold;\n\n      this._observer.hold(this, panEvent);\n      this._atRightEdge =\n        IS_IOS_SAFARI && panEvent.center.x > window.innerWidth - edgeThreshold;\n      this._attachWindowEvent(activeEvent);\n      activeEvent.prevEvent = panEvent;\n    }\n  }\n\n  protected _onPanmove(event: InputEventType) {\n    const activeEvent = this._activeEvent;\n    const panEvent = activeEvent.onEventMove(event, this.options.inputButton);\n    if (!panEvent || !this._enabled || activeEvent.getTouches(event) > 1) {\n      return;\n    }\n\n    const { iOSEdgeSwipeThreshold, releaseOnScroll } = this.options;\n    const userDirection = getDirectionByAngle(\n      panEvent.angle,\n      this.options.thresholdAngle\n    );\n\n    if (releaseOnScroll && !panEvent.srcEvent.cancelable) {\n      this._onPanend(event);\n      return;\n    }\n\n    if (activeEvent.prevEvent && IS_IOS_SAFARI) {\n      const swipeLeftToRight = panEvent.center.x < 0;\n\n      if (swipeLeftToRight) {\n        // iOS swipe left => right\n        this._forceRelease();\n        return;\n      } else if (this._atRightEdge) {\n        clearTimeout(this._rightEdgeTimer);\n\n        // - is right to left\n        const swipeRightToLeft = panEvent.deltaX < -iOSEdgeSwipeThreshold;\n\n        if (swipeRightToLeft) {\n          this._atRightEdge = false;\n        } else {\n          // iOS swipe right => left\n          this._rightEdgeTimer = window.setTimeout(\n            () => this._forceRelease(),\n            100\n          );\n        }\n      }\n    }\n    const offset = this._getOffset(\n      [panEvent.offsetX, panEvent.offsetY],\n      [\n        useDirection(DIRECTION_HORIZONTAL, this._direction, userDirection),\n        useDirection(DIRECTION_VERTICAL, this._direction, userDirection),\n      ]\n    );\n    const prevent = offset.some((v) => v !== 0);\n\n    if (prevent) {\n      if (panEvent.srcEvent.cancelable !== false) {\n        panEvent.srcEvent.preventDefault();\n      }\n      panEvent.srcEvent.stopPropagation();\n    }\n    panEvent.preventSystemEvent = prevent;\n    if (prevent) {\n      this._observer.change(this, panEvent, toAxis(this.axes, offset));\n    }\n    activeEvent.prevEvent = panEvent;\n  }\n\n  protected _onPanend(event: InputEventType) {\n    const activeEvent = this._activeEvent;\n    activeEvent.onEventEnd(event);\n    if (!this._enabled || activeEvent.getTouches(event) !== 0) {\n      return;\n    }\n    this._detachWindowEvent(activeEvent);\n    clearTimeout(this._rightEdgeTimer);\n    const prevEvent = activeEvent.prevEvent;\n    const velocity = this._getOffset(\n      [\n        Math.abs(prevEvent.velocityX) * (prevEvent.offsetX < 0 ? -1 : 1),\n        Math.abs(prevEvent.velocityY) * (prevEvent.offsetY < 0 ? -1 : 1),\n      ],\n      [\n        useDirection(DIRECTION_HORIZONTAL, this._direction),\n        useDirection(DIRECTION_VERTICAL, this._direction),\n      ]\n    );\n    activeEvent.onRelease();\n    this._observer.release(this, prevEvent, velocity);\n  }\n\n  protected _attachWindowEvent(activeEvent: ActiveEvent) {\n    activeEvent?.move.forEach((event) => {\n      window.addEventListener(event, this._onPanmove, { passive: false });\n    });\n    activeEvent?.end.forEach((event) => {\n      window.addEventListener(event, this._onPanend, { passive: false });\n    });\n  }\n\n  protected _detachWindowEvent(activeEvent: ActiveEvent) {\n    activeEvent?.move.forEach((event) => {\n      window.removeEventListener(event, this._onPanmove);\n    });\n    activeEvent?.end.forEach((event) => {\n      window.removeEventListener(event, this._onPanend);\n    });\n  }\n\n  protected _getOffset(properties: number[], direction: boolean[]): number[] {\n    const scale = this.options.scale;\n    return [\n      direction[0] ? properties[0] * scale[0] : 0,\n      direction[1] ? properties[1] * scale[1] : 0,\n    ];\n  }\n\n  private _attachElementEvent(observer: InputTypeObserver) {\n    const activeEvent = convertInputType(this.options.inputType);\n    if (!activeEvent) {\n      return;\n    }\n    this._observer = observer;\n    this._enabled = true;\n    this._activeEvent = activeEvent;\n    activeEvent.start.forEach((event) => {\n      this.element?.addEventListener(event, this._onPanstart);\n    });\n    // adding event listener to element prevents invalid behavior in iOS Safari\n    activeEvent.move.forEach((event) => {\n      this.element?.addEventListener(event, this._voidFunction);\n    });\n  }\n\n  private _detachElementEvent() {\n    const activeEvent = this._activeEvent;\n    activeEvent?.start.forEach((event) => {\n      this.element?.removeEventListener(event, this._onPanstart);\n    });\n    activeEvent?.move.forEach((event) => {\n      this.element?.removeEventListener(event, this._voidFunction);\n    });\n    this._enabled = false;\n    this._observer = null;\n  }\n\n  private _forceRelease = () => {\n    const activeEvent = this._activeEvent;\n    const prevEvent = activeEvent.prevEvent;\n    activeEvent.onRelease();\n    this._observer.release(this, prevEvent, [0, 0]);\n    this._detachWindowEvent(activeEvent);\n  };\n\n  private _voidFunction = () => {};\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Axes from \"../Axes\";\nimport { ElementType, ExtendedEvent } from \"../types\";\nimport { getAngle } from \"../utils\";\n\nimport { toAxis } from \"./InputType\";\nimport { PanInput, PanInputOption } from \"./PanInput\";\n\n/**\n * A module that passes the angle moved by touch to Axes and uses one axis of rotation.\n * [Details](https://github.com/naver/egjs-axes/wiki/RotatePanInput)\n * @ko 터치에 의해 움직인 각도를 Axes 에 전달하며 1개의 회전축만 사용한다.\n * [상세내용](https://github.com/naver/egjs-axes/wiki/RotatePanInput-%7C-%ED%95%9C%EA%B5%AD%EC%96%B4)\n *\n * @example\n * ```js\n * const input = new eg.Axes.RotatePanInput(\"#area\");\n *\n * var axes = new eg.Axes({\n *\t// property name('angle') could be anything you want (eg. x, y, z...)\n * \tangle: {\n * \t\trange: [-180, 180] // from -180deg to 180deg\n * \t}\n * });\n *\n * axes.connect(\"angle\", input)\n * ```\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.RotatePanInput module <ko>eg.Axes.RotatePanInput 모듈을 사용할 엘리먼트</ko>\n * @param {PanInputOption} [options] The option object of the eg.Axes.PanInput module<ko>eg.Axes.PanInput 모듈의 옵션 객체</ko>\n * @extends PanInput\n */\nexport class RotatePanInput extends PanInput {\n  private _rotateOrigin: number[];\n  private _prevAngle: number;\n  private _prevQuadrant: number = null;\n  private _lastDiff = 0;\n  private _coefficientForDistanceToAngle: number;\n\n  /**\n   *\n   */\n  public constructor(el: ElementType, options?: PanInputOption) {\n    super(el, options);\n  }\n\n  public mapAxes(axes: string[]) {\n    this._direction = Axes.DIRECTION_ALL;\n    this.axes = axes;\n  }\n\n  protected _onPanstart(event: MouseEvent) {\n    const activeEvent = this._activeEvent;\n    const panEvent = activeEvent.onEventStart(event, this.options.inputButton);\n    if (!panEvent || !this.isEnabled()) {\n      return;\n    }\n\n    const rect = this.element.getBoundingClientRect();\n\n    this._observer.hold(this, panEvent);\n    this._attachWindowEvent(activeEvent);\n    // TODO: how to do if element is ellipse not circle.\n    this._coefficientForDistanceToAngle = 360 / (rect.width * Math.PI); // from 2*pi*r * x / 360\n    // TODO: provide a way to set origin like https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\n    this._rotateOrigin = [\n      rect.left + (rect.width - 1) / 2,\n      rect.top + (rect.height - 1) / 2,\n    ];\n\n    // init angle.\n    this._prevAngle = null;\n\n    this._triggerChange(panEvent);\n    activeEvent.prevEvent = panEvent;\n  }\n\n  protected _onPanmove(event: MouseEvent) {\n    const activeEvent = this._activeEvent;\n    const panEvent = activeEvent.onEventMove(event, this.options.inputButton);\n    if (!panEvent || !this.isEnabled()) {\n      return;\n    }\n\n    if (panEvent.srcEvent.cancelable !== false) {\n      panEvent.srcEvent.preventDefault();\n    }\n    panEvent.srcEvent.stopPropagation();\n    this._triggerChange(panEvent);\n    activeEvent.prevEvent = panEvent;\n  }\n\n  protected _onPanend(event: MouseEvent) {\n    const activeEvent = this._activeEvent;\n    activeEvent.onEventEnd(event);\n    if (!this.isEnabled()) {\n      return;\n    }\n    const prevEvent = activeEvent.prevEvent;\n    this._triggerChange(prevEvent);\n    const vx = prevEvent.velocityX;\n    const vy = prevEvent.velocityY;\n    const velocity =\n      Math.sqrt(vx * vx + vy * vy) * (this._lastDiff > 0 ? -1 : 1); // clockwise\n    activeEvent.onRelease();\n    this._observer.release(this, prevEvent, [\n      velocity * this._coefficientForDistanceToAngle,\n    ]);\n    this._detachWindowEvent(activeEvent);\n  }\n\n  private _triggerChange(event: ExtendedEvent) {\n    const { x, y } = this._getPosFromOrigin(event.center.x, event.center.y);\n    const angle = getAngle(x, y);\n    const positiveAngle = angle < 0 ? 360 + angle : angle;\n    const quadrant = this._getQuadrant(event.center.x, event.center.y);\n    const diff = this._getDifference(\n      this._prevAngle,\n      positiveAngle,\n      this._prevQuadrant,\n      quadrant\n    );\n\n    this._prevAngle = positiveAngle;\n    this._prevQuadrant = quadrant;\n\n    if (diff === 0) {\n      return;\n    }\n\n    this._lastDiff = diff;\n    this._observer.change(this, event, toAxis(this.axes, [-diff])); // minus for clockwise\n  }\n\n  private _getDifference(\n    prevAngle: number,\n    angle: number,\n    prevQuadrant: number,\n    quadrant: number\n  ) {\n    let diff: number;\n\n    if (prevAngle === null) {\n      diff = 0;\n    } else if (prevQuadrant === 1 && quadrant === 4) {\n      diff = -prevAngle - (360 - angle);\n    } else if (prevQuadrant === 4 && quadrant === 1) {\n      diff = 360 - prevAngle + angle;\n    } else {\n      diff = angle - prevAngle;\n    }\n\n    return diff;\n  }\n\n  private _getPosFromOrigin(posX: number, posY: number) {\n    return {\n      x: posX - this._rotateOrigin[0],\n      y: this._rotateOrigin[1] - posY,\n    };\n  }\n\n  private _getQuadrant(posX: number, posY: number) {\n    /**\n     * Quadrant\n     *       y(+)\n     *       |\n     *   2   |    1\n     * --------------->x(+)\n     *   3   |    4\n     *       |\n     */\n    const { x, y } = this._getPosFromOrigin(posX, posY);\n    let q = 0;\n\n    if (x >= 0 && y >= 0) {\n      q = 1;\n    } else if (x < 0 && y >= 0) {\n      q = 2;\n    } else if (x < 0 && y < 0) {\n      q = 3;\n    } else if (x >= 0 && y < 0) {\n      q = 4;\n    }\n    return q;\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { $, isCssPropsFromAxes, setCssProps, revertCssProps } from \"../utils\";\nimport { ActiveEvent, ElementType, InputEventType } from \"../types\";\nimport { DIRECTION_ALL } from \"../const\";\n\nimport {\n  toAxis,\n  convertInputType,\n  InputType,\n  InputTypeObserver,\n} from \"./InputType\";\n\nexport interface PinchInputOption {\n  scale?: number;\n  threshold?: number;\n  inputType?: string[];\n  touchAction?: string;\n}\n\n/**\n * @typedef {Object} PinchInputOption The option object of the eg.Axes.PinchInput module\n * @ko eg.Axes.PinchInput 모듈의 옵션 객체\n * @param {Number} [scale=1] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @param {Number} [threshold=0] Minimal scale before recognizing <ko>사용자의 Pinch 동작을 인식하기 위해산 최소한의 배율</ko>\n * @param {String[]} [inputType=[\"touch\", \"pointer\"]] Types of input devices\n * - touch: Touch screen\n * - pointer: Mouse and touch <ko>입력 장치 종류\n * - touch: 터치 입력 장치\n * - pointer: 마우스 및 터치</ko>\n * @param {String} [touchAction=\"none\"] Value that overrides the element's \"touch-action\" css property. It is set to \"none\" to prevent scrolling during touch. <ko>엘리먼트의 \"touch-action\" CSS 속성을 덮어쓰는 값. 터치 도중 스크롤을 방지하기 위해 \"none\" 으로 설정되어 있다.</ko>\n **/\n\n/**\n * A module that passes the amount of change to eg.Axes when two pointers are moving toward (zoom-in) or away from each other (zoom-out). use one axis.\n * @ko 2개의 pointer를 이용하여 zoom-in하거나 zoom-out 하는 동작의 변화량을 eg.Axes에 전달하는 모듈. 한 개 의 축을 사용한다.\n * @example\n * ```js\n * const pinch = new eg.Axes.PinchInput(\"#area\", {\n * \t\tscale: 1\n * });\n *\n * // Connect 'something' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * axes.connect(\"something\", pinch);\n * ```\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.PinchInput module <ko>eg.Axes.PinchInput 모듈을 사용할 엘리먼트</ko>\n * @param {PinchInputOption} [options] The option object of the eg.Axes.PinchInput module<ko>eg.Axes.PinchInput 모듈의 옵션 객체</ko>\n */\nexport class PinchInput implements InputType {\n  public options: PinchInputOption;\n  public axes: string[] = [];\n  public element: HTMLElement = null;\n  private _observer: InputTypeObserver;\n  private _pinchFlag = false;\n  private _enabled = false;\n  private _originalCssProps: { [key: string]: string };\n  private _activeEvent: ActiveEvent = null;\n  private _baseValue: number;\n\n  /**\n   *\n   */\n  public constructor(el: ElementType, options?: PinchInputOption) {\n    this.element = $(el);\n    this.options = {\n      scale: 1,\n      threshold: 0,\n      inputType: [\"touch\", \"pointer\"],\n      touchAction: \"none\",\n      ...options,\n    };\n    this._onPinchStart = this._onPinchStart.bind(this);\n    this._onPinchMove = this._onPinchMove.bind(this);\n    this._onPinchEnd = this._onPinchEnd.bind(this);\n  }\n\n  public mapAxes(axes: string[]) {\n    this.axes = axes;\n  }\n\n  public connect(observer: InputTypeObserver): InputType {\n    if (this._activeEvent) {\n      this._detachEvent();\n    }\n    this._attachEvent(observer);\n    this._originalCssProps = setCssProps(\n      this.element,\n      this.options,\n      DIRECTION_ALL\n    );\n    return this;\n  }\n\n  public disconnect() {\n    this._detachEvent();\n    if (!isCssPropsFromAxes(this._originalCssProps)) {\n      revertCssProps(this.element, this._originalCssProps);\n    }\n    return this;\n  }\n\n  /**\n   * Destroys elements, properties, and events used in a module.\n   * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n   */\n  public destroy() {\n    this.disconnect();\n    this.element = null;\n  }\n\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @return {PinchInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public enable() {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @return {PinchInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public disable() {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n  public isEnabled() {\n    return this._enabled;\n  }\n\n  private _onPinchStart(event: InputEventType) {\n    const activeEvent = this._activeEvent;\n    const pinchEvent = activeEvent.onEventStart(event);\n    if (!pinchEvent || !this._enabled || activeEvent.getTouches(event) !== 2) {\n      return;\n    }\n\n    this._baseValue = this._observer.get(this)[this.axes[0]];\n    this._observer.hold(this, event);\n    this._pinchFlag = true;\n    activeEvent.prevEvent = pinchEvent;\n  }\n\n  private _onPinchMove(event: InputEventType) {\n    const activeEvent = this._activeEvent;\n    const pinchEvent = activeEvent.onEventMove(event);\n    if (\n      !pinchEvent ||\n      !this._pinchFlag ||\n      !this._enabled ||\n      activeEvent.getTouches(event) !== 2\n    ) {\n      return;\n    }\n\n    const offset = this._getOffset(\n      pinchEvent.scale,\n      activeEvent.prevEvent.scale\n    );\n    this._observer.change(this, event, toAxis(this.axes, [offset]));\n    activeEvent.prevEvent = pinchEvent;\n  }\n\n  private _onPinchEnd(event: InputEventType) {\n    const activeEvent = this._activeEvent;\n    activeEvent.onEventEnd(event);\n    if (\n      !this._pinchFlag ||\n      !this._enabled ||\n      activeEvent.getTouches(event) >= 2\n    ) {\n      return;\n    }\n\n    activeEvent.onRelease();\n    this._observer.release(this, event, [0], 0);\n    this._baseValue = null;\n    this._pinchFlag = false;\n  }\n\n  private _attachEvent(observer: InputTypeObserver) {\n    const activeEvent = convertInputType(this.options.inputType);\n    if (!activeEvent) {\n      return;\n    }\n    this._observer = observer;\n    this._enabled = true;\n    this._activeEvent = activeEvent;\n    activeEvent.start.forEach((event) => {\n      this.element.addEventListener(event, this._onPinchStart, false);\n    });\n    activeEvent.move.forEach((event) => {\n      this.element.addEventListener(event, this._onPinchMove, false);\n    });\n    activeEvent.end.forEach((event) => {\n      this.element.addEventListener(event, this._onPinchEnd, false);\n    });\n  }\n\n  private _detachEvent() {\n    const activeEvent = this._activeEvent;\n    activeEvent?.start.forEach((event) => {\n      this.element.removeEventListener(event, this._onPinchStart, false);\n    });\n    activeEvent?.move.forEach((event) => {\n      this.element.removeEventListener(event, this._onPinchMove, false);\n    });\n    activeEvent?.end.forEach((event) => {\n      this.element.removeEventListener(event, this._onPinchEnd, false);\n    });\n    this._enabled = false;\n    this._observer = null;\n  }\n\n  private _getOffset(pinchScale: number, prev: number = 1): number {\n    return this._baseValue * (pinchScale - prev) * this.options.scale;\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { $, getDirection, useDirection } from \"../utils\";\nimport { DIRECTION_HORIZONTAL, DIRECTION_VERTICAL } from \"../const\";\nimport { ElementType } from \"../types\";\n\nimport { toAxis, InputType, InputTypeObserver } from \"./InputType\";\n\nexport interface WheelInputOption {\n  scale?: number;\n  releaseDelay?: number;\n  useNormalized?: boolean;\n  useAnimation?: boolean;\n}\n\n/**\n * @typedef {Object} WheelInputOption The option object of the eg.Axes.WheelInput module\n * @ko eg.Axes.WheelInput 모듈의 옵션 객체\n * @param {Number} [scale=1] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @param {Number} [releaseDelay=300] Millisecond that trigger release event after last input<ko>마지막 입력 이후 release 이벤트가 트리거되기까지의 밀리초</ko>\n * @param {Boolean} [useNormalized=true] Whether to calculate scroll speed the same in all browsers<ko>모든 브라우저에서 스크롤 속도를 동일하게 처리할지 여부</ko>\n * @param {Boolean} [useAnimation=false] Whether to process coordinate changes through the mouse wheel as a continuous animation<ko>마우스 휠을 통한 좌표 변화를 연속적인 애니메이션으로 처리할지 여부</ko>\n **/\n\n/**\n * A module that passes the amount of change to eg.Axes when the mouse wheel is moved. use one axis.\n * @ko 마우스 휠이 움직일때의 변화량을 eg.Axes에 전달하는 모듈. 두개 이하의 축을 사용한다.\n *\n * @example\n * ```js\n * const wheel = new eg.Axes.WheelInput(\"#area\", {\n * \t\tscale: 1\n * });\n *\n * // Connect only one 'something1' axis to the vertical mouse wheel.\n * axes.connect([\"something1\"], wheel); // or axes.connect(\"something1\", wheel);\n *\n * // Connect only one 'something2' axis to the horizontal mouse wheel.\n * axes.connect([\"\", \"something2\"], wheel); // or axes.connect(\" something2\", pan);\n *\n * // Connect the 'something1' axis to the vertical mouse wheel.\n * // Connect the 'something2' axis to the horizontal mouse wheel.\n * axes.connect([\"something1\", \"something2\"], wheel);\n * ```\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.WheelInput module <ko>eg.Axes.WheelInput 모듈을 사용할 엘리먼트</ko>\n * @param {WheelInputOption} [options] The option object of the eg.Axes.WheelInput module<ko>eg.Axes.WheelInput 모듈의 옵션 객체</ko>\n */\nexport class WheelInput implements InputType {\n  public options: WheelInputOption;\n  public axes: string[] = [];\n  public element: HTMLElement = null;\n  private _observer: InputTypeObserver;\n  private _direction: number;\n  private _enabled = false;\n  private _holding = false;\n  private _timer: NodeJS.Timeout = null;\n\n  /**\n   *\n   */\n  public constructor(el: ElementType, options?: WheelInputOption) {\n    this.element = $(el);\n    this.options = {\n      ...{\n        scale: 1,\n        releaseDelay: 300,\n        useNormalized: true,\n        useAnimation: false,\n      },\n      ...options,\n    };\n    this._onWheel = this._onWheel.bind(this);\n  }\n\n  public mapAxes(axes: string[]) {\n    // vertical mouse wheel is mapped into axes[0]\n    this._direction = getDirection(!!axes[1], !!axes[0]);\n    this.axes = axes;\n  }\n\n  public connect(observer: InputTypeObserver): InputType {\n    this._detachEvent();\n    this._attachEvent(observer);\n    return this;\n  }\n\n  public disconnect() {\n    this._detachEvent();\n    return this;\n  }\n\n  /**\n   * Destroys elements, properties, and events used in a module.\n   * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n   */\n  public destroy() {\n    this.disconnect();\n    this.element = null;\n  }\n\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @return {WheelInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public enable() {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @return {WheelInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public disable() {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n  public isEnabled() {\n    return this._enabled;\n  }\n\n  private _onWheel(event: WheelEvent) {\n    if (!this._enabled) {\n      return;\n    }\n\n    const offset = this._getOffset(\n      [event.deltaY, event.deltaX],\n      [\n        useDirection(DIRECTION_VERTICAL, this._direction),\n        useDirection(DIRECTION_HORIZONTAL, this._direction),\n      ]\n    );\n\n    if (offset[0] === 0 && offset[1] === 0) {\n      return;\n    }\n    event.preventDefault();\n\n    if (!this._holding) {\n      this._observer.hold(this, event);\n      this._holding = true;\n    }\n\n    this._observer.change(\n      this,\n      event,\n      toAxis(this.axes, offset),\n      this.options.useAnimation\n    );\n    clearTimeout(this._timer);\n\n    this._timer = setTimeout(() => {\n      if (this._holding) {\n        this._holding = false;\n        this._observer.release(this, event, [0]);\n      }\n    }, this.options.releaseDelay);\n  }\n\n  private _getOffset(properties: number[], direction: boolean[]): number[] {\n    const scale = this.options.scale;\n    const useNormalized = this.options.useNormalized;\n    return [\n      direction[0] && properties[0]\n        ? (properties[0] > 0 ? -1 : 1) *\n          (useNormalized ? 1 : Math.abs(properties[0])) *\n          scale\n        : 0,\n      direction[1] && properties[1]\n        ? (properties[1] > 0 ? -1 : 1) *\n          (useNormalized ? 1 : Math.abs(properties[1])) *\n          scale\n        : 0,\n    ];\n  }\n\n  private _attachEvent(observer: InputTypeObserver) {\n    this._observer = observer;\n    this.element.addEventListener(\"wheel\", this._onWheel);\n    this._enabled = true;\n  }\n\n  private _detachEvent() {\n    this.element.removeEventListener(\"wheel\", this._onWheel);\n    this._enabled = false;\n    this._observer = null;\n\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ElementType } from \"../types\";\nimport { $ } from \"../utils\";\n\nimport { toAxis, InputType, InputTypeObserver } from \"./InputType\";\n\nexport const KEY_LEFT_ARROW = 37;\nexport const KEY_A = 65;\nexport const KEY_UP_ARROW = 38;\nexport const KEY_W = 87;\nexport const KEY_RIGHT_ARROW = 39;\nexport const KEY_D = 68;\nexport const KEY_DOWN_ARROW = 40;\nexport const KEY_S = 83;\n\n/* eslint-disable */\nconst DIRECTION_REVERSE = -1;\nconst DIRECTION_FORWARD = 1;\nconst DIRECTION_HORIZONTAL = -1;\nconst DIRECTION_VERTICAL = 1;\nconst DELAY = 80;\n/* eslint-enable */\n\nexport interface MoveKeyInputOption {\n  scale?: number[];\n}\n\n/**\n * @typedef {Object} MoveKeyInputOption The option object of the eg.Axes.MoveKeyInput module\n * @ko eg.Axes.MoveKeyInput 모듈의 옵션 객체\n * @param {Array<Number>} [scale] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @param {Number} [scale[0]=1] Coordinate scale for the first axis<ko>첫번째 축의 배율</ko>\n * @param {Number} [scale[1]=1] Coordinate scale for the decond axis<ko>두번째 축의 배율</ko>\n **/\n\n/**\n * A module that passes the amount of change to eg.Axes when the move key stroke is occured. use two axis.\n * @ko 이동키 입력이 발생했을 때의 변화량을 eg.Axes에 전달하는 모듈. 두 개 의 축을 사용한다.\n *\n * @example\n * ```js\n * const moveKey = new eg.Axes.MoveKeyInput(\"#area\", {\n * \t\tscale: [1, 1]\n * });\n *\n * // Connect 'x', 'y' axes when the moveKey is pressed.\n * axes.connect([\"x\", \"y\"], moveKey);\n * ```\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.MoveKeyInput module <ko>eg.Axes.MoveKeyInput 모듈을 사용할 엘리먼트</ko>\n * @param {MoveKeyInputOption} [options] The option object of the eg.Axes.MoveKeyInput module<ko>eg.Axes.MoveKeyInput 모듈의 옵션 객체</ko>\n */\nexport class MoveKeyInput implements InputType {\n  public options: MoveKeyInputOption;\n  public axes: string[] = [];\n  public element: HTMLElement = null;\n  private _observer: InputTypeObserver;\n  private _enabled = false;\n  private _holding = false;\n  private _timer: NodeJS.Timeout = null;\n\n  /**\n   *\n   */\n  public constructor(el: ElementType, options?: MoveKeyInputOption) {\n    this.element = $(el);\n    this.options = {\n      ...{\n        scale: [1, 1],\n      },\n      ...options,\n    };\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onKeyup = this._onKeyup.bind(this);\n  }\n\n  public mapAxes(axes: string[]) {\n    this.axes = axes;\n  }\n\n  public connect(observer: InputTypeObserver): InputType {\n    this._detachEvent();\n\n    // add tabindex=\"0\" to the container for making it focusable\n    if (this.element.getAttribute(\"tabindex\") !== \"0\") {\n      this.element.setAttribute(\"tabindex\", \"0\");\n    }\n\n    this._attachEvent(observer);\n    return this;\n  }\n\n  public disconnect() {\n    this._detachEvent();\n    return this;\n  }\n\n  /**\n   * Destroys elements, properties, and events used in a module.\n   * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n   */\n  public destroy() {\n    this.disconnect();\n    this.element = null;\n  }\n\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @return {MoveKeyInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public enable() {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @return {MoveKeyInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n  public disable() {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n  public isEnabled() {\n    return this._enabled;\n  }\n\n  private _onKeydown(event: KeyboardEvent) {\n    if (!this._enabled) {\n      return;\n    }\n\n    let isMoveKey = true;\n    let direction = DIRECTION_FORWARD;\n    let move = DIRECTION_HORIZONTAL;\n\n    switch (event.keyCode) {\n      case KEY_LEFT_ARROW:\n      case KEY_A:\n        direction = DIRECTION_REVERSE;\n        break;\n      case KEY_RIGHT_ARROW:\n      case KEY_D:\n        break;\n      case KEY_DOWN_ARROW:\n      case KEY_S:\n        direction = DIRECTION_REVERSE;\n        move = DIRECTION_VERTICAL;\n        break;\n      case KEY_UP_ARROW:\n      case KEY_W:\n        move = DIRECTION_VERTICAL;\n        break;\n      default:\n        isMoveKey = false;\n    }\n    if (\n      (move === DIRECTION_HORIZONTAL && !this.axes[0]) ||\n      (move === DIRECTION_VERTICAL && !this.axes[1])\n    ) {\n      isMoveKey = false;\n    }\n    if (!isMoveKey) {\n      return;\n    }\n    event.preventDefault();\n    const offsets =\n      move === DIRECTION_HORIZONTAL\n        ? [+this.options.scale[0] * direction, 0]\n        : [0, +this.options.scale[1] * direction];\n\n    if (!this._holding) {\n      this._observer.hold(this, event);\n      this._holding = true;\n    }\n    clearTimeout(this._timer);\n    this._observer.change(this, event, toAxis(this.axes, offsets));\n  }\n\n  private _onKeyup(event: KeyboardEvent) {\n    if (!this._holding) {\n      return;\n    }\n    clearTimeout(this._timer);\n    this._timer = setTimeout(() => {\n      this._observer.release(this, event, [0, 0]);\n      this._holding = false;\n    }, DELAY);\n  }\n\n  private _attachEvent(observer: InputTypeObserver) {\n    this._observer = observer;\n    this.element.addEventListener(\"keydown\", this._onKeydown, false);\n    this.element.addEventListener(\"keypress\", this._onKeydown, false);\n    this.element.addEventListener(\"keyup\", this._onKeyup, false);\n    this._enabled = true;\n  }\n\n  private _detachEvent() {\n    this.element.removeEventListener(\"keydown\", this._onKeydown, false);\n    this.element.removeEventListener(\"keypress\", this._onKeydown, false);\n    this.element.removeEventListener(\"keyup\", this._onKeyup, false);\n    this._enabled = false;\n    this._observer = null;\n  }\n}\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Axes, { AxesOption } from \"./Axes\";\nimport { AXES_EVENTS, AXES_METHODS } from \"./const\";\nimport { ReactiveAdapter } from \"./cfcs\";\nimport {\n  AxesEvents,\n  AxesMethods,\n  AxesReactiveState,\n  ObjectInterface,\n} from \"./types\";\nimport { AxisOption } from \"./AxisManager\";\n\nexport interface AxesData {\n  axis: ObjectInterface<AxisOption>;\n  options: AxesOption;\n}\n\nexport const REACTIVE_AXES: ReactiveAdapter<\n  Axes,\n  AxesReactiveState,\n  keyof AxesMethods,\n  AxesData,\n  AxesEvents\n> = {\n  state: {},\n  methods: AXES_METHODS,\n  events: AXES_EVENTS,\n  instance(data) {\n    return new Axes(data.axis, data.options);\n  },\n  on(instance, name, callback) {\n    instance.on(name, callback);\n  },\n  off(instance, name, callback) {\n    instance.off(name, callback);\n  },\n  destroy(instance) {\n    instance.destroy();\n  },\n};\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Axes from \"./Axes\";\nexport { PanInput } from \"./inputType/PanInput\";\nexport { RotatePanInput } from \"./inputType/RotatePanInput\";\nexport { PinchInput } from \"./inputType/PinchInput\";\nexport { WheelInput } from \"./inputType/WheelInput\";\nexport { MoveKeyInput } from \"./inputType/MoveKeyInput\";\n\nexport default Axes;\n\nexport { AXES_METHODS, AXES_EVENTS } from \"./const\";\nexport { getInitialPos } from \"./utils\";\nexport * from \"./types\";\nexport * from \"./reactive\";\nexport * from \"./cfcs\";\n","/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport Axes, * as modules from \"./index\";\n\nfor (const name in modules) {\n  (Axes as any)[name] = (modules as any)[name];\n}\n\nexport default Axes;\n"],"names":["OBSERVERS_PATH","value","Component","_current","Object","isUpdate","_emitter","trigger","callback","on","off","keys","obj","camelize","str","replace","all","letter","toUpperCase","withReactiveMethods","ref","methods","forEach","name","_i","args","current","getObservers","instance","getObserver","defaultValue","observers","Observer","ReactiveSubscribe","Constructor","prototype","subscribe","observerName","_this","unsubscribe","withClassMethods","memberName","result","_a","win","window","navigator","userAgent","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_HORIZONTAL","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","MOUSE_LEFT","MOUSE_RIGHT","MOUSE_MIDDLE","VELOCITY_INTERVAL","AXES_METHODS","AXES_EVENTS","IOS_EDGE_THRESHOLD","IS_IOS_SAFARI","getAgent","browser","TRANSFORM","document","bodyStyle","head","getElementsByTagName","style","target","i","len","length","PREVENT_DRAG_CSSPROPS","toArray","nodes","el","push","$","param","multi","match","dummy","createElement","innerHTML","childNodes","querySelectorAll","undefined","nodeName","nodeType","jQuery","constructor","jquery","get","Array","isArray","map","v","raf","requestAnimationFrame","webkitRequestAnimationFrame","caf","cancelAnimationFrame","webkitCancelAnimationFrame","keyInfo_1","oldraf_1","wrapCallback","timestamp","key","setTimeout","performance","now","Date","getTime","clearTimeout","fp","tranformed","k","filter","filtered","every","equal","base","roundNumFunc","roundNumber","num","roundUnit","getRoundFunc","roundNumbers","getDecimalPlace","val","isFinite","indexOf","p","e","Math","round","inversePow","n","pow","getAngle","posX","posY","atan2","PI","isCssPropsFromAxes","originalCssProps","same","prop","getDirection","useHorizontal","useVertical","getInitialPos","axis","startPos","reduce","assign","range","useDirection","checkType","direction","userDirection","setCssProps","element","option","touchActionMap","oldCssProps","touchAction","newCssProps_1","revertCssProps","_axes","pos","roundPos","_getRoundPos","ComponentEvent","input","inputEvent","event","isTrusted","destPos","depaPos","roundDepa","setTo","_createUserControll","duration","__assign","bounceRatio","_getBounceRatio","holding","animationManager","axisManager","eventInfo","getEventInfo","moveTo","delta","set","isCanceled","userControl","toPos","userDuration","options","opt","bounce","_options","interruptable","_prevented","prevented","getInsidePosition","circular","toDestPos","targetRange","max","min","isOutside","isEndofBounce","getDuration","distance","deceleration","sqrt","isCircularable","getCirculatedPos","_axis","_complementOptions","_pos","acc","fullDepaPos","axes","axisOptions","axisOption","test","SUPPORT_TOUCH","SUPPORT_POINTER","SUPPORT_MSPOINTER","SUPPORT_POINTER_EVENTS","preventDefault","removeEventListener","_stopContextMenu","prevEvent","center","_getCenter","movement","_getMovement","x","y","scale","_getScale","angle","deltaX","deltaY","offsetX","offsetY","latestInterval","_latestInterval","timeStamp","deltaTime","velocityX","velocityY","srcEvent","preventSystemEvent","start","end","clientX","clientY","buttonCodeMap","button","_isTouchEvent","buttons","type","inputButton","addEventListener","__extends","_getButton","_isValidButton","_preventMouseButton","extendEvent","prev","EventInput","_baseTouches","touches","_getDistance","identifier","_updatePointerEvent","_removePointerEvent","_firstInputs","_recentInputs","pointerId","addFlag","id","nextSpot","prevSpot","toAxis","source","offset","convertInputType","inputType","hasTouch","hasMouse","hasPointer","PointerEventInput","TouchMouseEventInput","TouchEventInput","MouseEventInput","interruptManager","eventManager","_interruptManager","_eventManager","_axisManager","_animationManager","isInterrupted","changeOption","_isStopped","setInterrupt","stopAnimation","_moveDistance","hold","_isOutside","useAnimation","isInterrupting","nativeEvent","__childrenAxesAlreadyChanged","_atOutside","nested","_isEndofAxis","animateTo","triggerChange","finish","velocity","inputDuration","__childrenAxesAlreadyReleased","displacement","getDisplacement","getDelta","triggerRelease","userWish","getUserControl","isEqual","restore","triggerFinish","tn","tx","out","interpolate","clamp","animationEnd","bind","wishDuration","durations_1","abs","Infinity","minimumDuration","maximumDuration","totalVelocity","total","_animateParam","orgPos_1","_raf","triggerAnimationEnd","beforeParam","circularTargets","_createAnimationParam","retTrigger","triggerAnimationStart","console","warn","_animateLoop","orgPos","movedPos","done","complete","startTime","originalIntendedPos_1","state_1","_initState","loop_1","animateParam","nextState","_getNextState","finished","_getFinalPos","originalIntendedPos","ERROR_LIMIT","finalPos","_getRoundUnit","minRoundUnit","getAxisOptions","threshold","initSlope","_easing","diffTime","restart","currentPos","_initialEasingPer","_prevEasingPer","ratio","_durationOffset","info","easingPer","prevState","prevPos","directions","nextPos","circulatedPos","rangeOffset","easing","AnimationManager","_super","InterruptManager","AxisManager","EventManager","EasingManager","inputObserver","InputObserver","setAnimationManager","mapped","split","concat","_inputs","disconnect","mapAxes","connect","index","splice","setBy","updateAnimation","destroy","Axes","getDirectionByAngle","thresholdAngle","toAngle","activeEvent","_activeEvent","onRelease","_observer","release","_detachWindowEvent","iOSEdgeSwipeThreshold","releaseOnScroll","_onPanstart","_onPanmove","_onPanend","_direction","observer","_detachElementEvent","_attachElementEvent","_originalCssProps","_enabled","panEvent","onEventStart","getTouches","cancelable","edgeThreshold","_atRightEdge","innerWidth","_attachWindowEvent","onEventMove","swipeLeftToRight","_forceRelease","_rightEdgeTimer","swipeRightToLeft","_getOffset","prevent","some","stopPropagation","change","onEventEnd","move","passive","properties","_voidFunction","isEnabled","rect","getBoundingClientRect","_coefficientForDistanceToAngle","width","_rotateOrigin","left","top","height","_prevAngle","_triggerChange","vx","vy","_lastDiff","_getPosFromOrigin","positiveAngle","quadrant","_getQuadrant","diff","_getDifference","_prevQuadrant","prevAngle","prevQuadrant","q","PanInput","_onPinchStart","_onPinchMove","_onPinchEnd","_detachEvent","_attachEvent","pinchEvent","_baseValue","_pinchFlag","pinchScale","releaseDelay","useNormalized","_onWheel","_holding","_timer","KEY_LEFT_ARROW","KEY_A","KEY_UP_ARROW","KEY_W","KEY_RIGHT_ARROW","KEY_D","KEY_DOWN_ARROW","KEY_S","DIRECTION_REVERSE","DIRECTION_FORWARD","DELAY","_onKeydown","_onKeyup","getAttribute","setAttribute","isMoveKey","keyCode","offsets","REACTIVE_AXES","state","events","data","modules"],"mappings":"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"}