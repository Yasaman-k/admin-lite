import Flicking from "@egjs/flicking";
import type { Plugin } from "@egjs/flicking";
import { SYNC } from "./const";
export interface SyncOptions {
    type: typeof SYNC.TYPE.CAMERA | typeof SYNC.TYPE.INDEX;
    synchronizedFlickingOptions: SychronizableFlickingOptions[];
}
export interface SychronizableFlickingOptions {
    flicking: Flicking;
    isClickable?: boolean;
    isSlidable?: boolean;
    activeClass?: string;
}
declare class Sync implements Plugin {
    private _flicking;
    private _type;
    private _synchronizedFlickingOptions;
    get type(): SyncOptions["type"];
    get synchronizedFlickingOptions(): SyncOptions["synchronizedFlickingOptions"];
    set type(val: SyncOptions["type"]);
    set synchronizedFlickingOptions(val: SyncOptions["synchronizedFlickingOptions"]);
    constructor({ type, synchronizedFlickingOptions }?: Partial<SyncOptions>);
    init(flicking: Flicking): void;
    destroy(): void;
    update(): void;
    private _preventEvent;
    private _addEvents;
    private _removeEvents;
    private _onIndexChange;
    private _onMove;
    private _onMoveStart;
    private _onMoveEnd;
    private _onSelect;
    private _synchronizeByIndex;
    private _updateClass;
}
export default Sync;
