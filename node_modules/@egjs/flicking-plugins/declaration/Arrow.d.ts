import Flicking, { Plugin } from "@egjs/flicking";
interface ArrowOptions {
    parentEl: HTMLElement | null;
    prevElSelector: string;
    nextElSelector: string;
    disabledClass: string;
    moveCount: number;
    moveByViewportSize: boolean;
}
declare class Arrow implements Plugin {
    private _flicking;
    private _prevEl;
    private _nextEl;
    private _parentEl;
    private _prevElSelector;
    private _nextElSelector;
    private _disabledClass;
    private _moveCount;
    private _moveByViewportSize;
    get prevEl(): HTMLElement;
    get nextEl(): HTMLElement;
    get parentEl(): ArrowOptions["parentEl"];
    get prevElSelector(): ArrowOptions["prevElSelector"];
    get nextElSelector(): ArrowOptions["nextElSelector"];
    get disabledClass(): ArrowOptions["disabledClass"];
    get moveCount(): ArrowOptions["moveCount"];
    get moveByViewportSize(): ArrowOptions["moveByViewportSize"];
    set parentEl(val: ArrowOptions["parentEl"]);
    set prevElSelector(val: ArrowOptions["prevElSelector"]);
    set nextElSelector(val: ArrowOptions["nextElSelector"]);
    set disabledClass(val: ArrowOptions["disabledClass"]);
    set moveCount(val: ArrowOptions["moveCount"]);
    set moveByViewportSize(val: ArrowOptions["moveByViewportSize"]);
    constructor({ parentEl, prevElSelector, nextElSelector, disabledClass, moveCount, moveByViewportSize }?: Partial<ArrowOptions>);
    init(flicking: Flicking): void;
    destroy(): void;
    update(): void;
    private _preventInputPropagation;
    private _onPrevClick;
    private _onNextClick;
    private _onAnimation;
    private _updateClass;
    private _onCatch;
}
export default Arrow;
