{
  "version": 3,
  "sources": ["../@egjs/list-differ/src/PolyMap.ts", "../@egjs/list-differ/src/HashMap.ts", "../@egjs/list-differ/src/consts.ts", "../@egjs/list-differ/src/Link.ts", "../@egjs/list-differ/src/Result.ts", "../@egjs/list-differ/src/utils.ts", "../@egjs/list-differ/src/ListDiffer.ts", "../@egjs/list-differ/src/index.ts", "../@egjs/vue3-flicking/src/FlickingProps.ts", "../@egjs/vue3-flicking/src/VueRenderer.ts", "../@egjs/vue3-flicking/src/VuePanel.ts", "../@egjs/vue3-flicking/src/VueElementProvider.ts", "../@egjs/vue3-flicking/src/Flicking.ts", "dep:@egjs_vue3-flicking"],
  "sourcesContent": ["/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class PolyMap<T> {\n  private keys: T[] = [];\n  private values: number[] = [];\n  public get(key: T): number {\n    return this.values[this.keys.indexOf(key)];\n  }\n  public set(key: T, value: number) {\n    const keys = this.keys;\n    const values = this.values;\n    const prevIndex = keys.indexOf(key);\n    const index = prevIndex === -1 ? keys.length : prevIndex;\n\n    keys[index] = key;\n    values[index] = value;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class HashMap<T> {\n  private object = {};\n  public get(key: number | string): T {\n    return this.object[key];\n  }\n  public set(key: number | string, value: T) {\n    this.object[key] = value;\n  }\n};\n\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport const SUPPORT_MAP = typeof Map === \"function\";\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nexport default class Link {\n  prev?: Link;\n  next?: Link;\n\n  public connect(prevLink?: Link, nextLink?: Link) {\n    this.prev = prevLink;\n    this.next = nextLink;\n\n    prevLink && (prevLink.next = this);\n    nextLink && (nextLink.prev = this);\n  }\n  public disconnect() {\n    // In double linked list, diconnect the interconnected relationship.\n    const prevLink = this.prev;\n    const nextLink = this.next;\n    prevLink && (prevLink.next = nextLink);\n    nextLink && (nextLink.prev = prevLink);\n  }\n  public getIndex() {\n    let link: Link | undefined = this;\n    let index = -1;\n\n    while (link) {\n      link = link.prev;\n      ++index;\n    }\n    return index;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport Link from \"./Link\";\n\nfunction orderChanged(changed: number[][], fixed: boolean[]) {\n  // It is roughly in the order of these examples.\n  // 4, 6, 0, 2, 1, 3, 5, 7\n  const fromLinks: Link[] = [];\n  // 0, 1, 2, 3, 4, 5, 6, 7\n  const toLinks: Link[] = [];\n\n  changed.forEach(([from, to]) => {\n    const link = new Link();\n\n    fromLinks[from] = link;\n    toLinks[to] = link;\n  });\n  // `fromLinks` are connected to each other by double linked list.\n  fromLinks.forEach((link, i) => {\n    link.connect(fromLinks[i - 1]);\n  });\n\n  return changed.filter((_, i) => !fixed[i]).map(([from, to], i) => {\n    if (from === to) {\n      return [0, 0];\n    }\n    const fromLink = fromLinks[from];\n    const toLink = toLinks[to - 1];\n    const fromIndex = fromLink.getIndex();\n\n    // Disconnect the link connected to `fromLink`.\n    fromLink.disconnect();\n\n    // Connect `fromLink` to the right of `toLink`.\n    if (!toLink) {\n      fromLink.connect(undefined, fromLinks[0]);\n    } else {\n      fromLink.connect(toLink, toLink.next);\n    }\n    const toIndex = fromLink.getIndex();\n    return [fromIndex, toIndex];\n  });\n}\n\nexport default class Result<T = any> {\n  public prevList: T[];\n  public list: T[];\n  public added: number[];\n  public removed: number[];\n  public changed: number[][];\n  public maintained: number[][];\n  private changedBeforeAdded: number[][];\n  private fixed: boolean[];\n\n  private cacheOrdered: number[][];\n  private cachePureChanged: number[][];\n  constructor(\n    prevList: T[],\n    list: T[],\n    added: number[],\n    removed: number[],\n    changed: number[][],\n    maintained: number[][],\n    changedBeforeAdded: number[][],\n    fixed: boolean[],\n  ) {\n    this.prevList = prevList;\n    this.list = list;\n    this.added = added;\n    this.removed = removed;\n    this.changed = changed;\n    this.maintained = maintained;\n    this.changedBeforeAdded = changedBeforeAdded;\n    this.fixed = fixed;\n  }\n  get ordered(): number[][] {\n    if (!this.cacheOrdered) {\n      this.caculateOrdered();\n    }\n    return this.cacheOrdered;\n  }\n  get pureChanged(): number[][] {\n    if (!this.cachePureChanged) {\n      this.caculateOrdered();\n    }\n    return this.cachePureChanged;\n  }\n  private caculateOrdered() {\n    const ordered = orderChanged(this.changedBeforeAdded, this.fixed);\n    const changed: number[][] = this.changed;\n    const pureChanged: number[][] = [];\n\n    this.cacheOrdered = ordered.filter(([from, to], i) => {\n      const [fromBefore, toBefore] = changed[i];\n\n      if (from !== to) {\n        pureChanged.push([fromBefore, toBefore]);\n        return true;\n      }\n    });\n    this.cachePureChanged = pureChanged;\n  }\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport { MapInteface, DiffResult } from \"./types\";\nimport PolyMap from \"./PolyMap\";\nimport HashMap from \"./HashMap\";\nimport { SUPPORT_MAP } from \"./consts\";\nimport Result from \"./Result\";\n\n/**\n *\n * @memberof eg.ListDiffer\n * @static\n * @function\n * @param - Previous List <ko> \uC774\uC804 \uBAA9\uB85D </ko>\n * @param - List to Update <ko> \uC5C5\uB370\uC774\uD2B8 \uD560 \uBAA9\uB85D </ko>\n * @param - This callback function returns the key of the item. <ko> \uC544\uC774\uD15C\uC758 \uD0A4\uB97C \uBC18\uD658\uD558\uB294 \uCF5C\uBC31 \uD568\uC218\uC785\uB2C8\uB2E4.</ko>\n * @return - Returns the diff between `prevList` and `list` <ko> `prevList`\uC640 `list`\uC758 \uB2E4\uB978 \uC810\uC744 \uBC18\uD658\uD55C\uB2E4.</ko>\n * @example\n * import { diff } from \"@egjs/list-differ\";\n * // script => eg.ListDiffer.diff\n * const result = diff([0, 1, 2, 3, 4, 5], [7, 8, 0, 4, 3, 6, 2, 1], e => e);\n * // List before update\n * // [1, 2, 3, 4, 5]\n * console.log(result.prevList);\n * // Updated list\n * // [4, 3, 6, 2, 1]\n * console.log(result.list);\n * // Index array of values added to `list`\n * // [0, 1, 5]\n * console.log(result.added);\n * // Index array of values removed in `prevList`\n * // [5]\n * console.log(result.removed);\n * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`\n * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n * console.log(result.changed);\n * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n * // [[4, 3], [3, 4], [2, 6]]\n * console.log(result.pureChanged);\n * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n * // [[4, 1], [4, 2], [4, 3]]\n * console.log(result.ordered);\n * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved\n * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n * console.log(result.maintained);\n */\nexport function diff<T>(\n  prevList: T[],\n  list: T[],\n  findKeyCallback?: (e: T, i: number, arr: T[]) => any\n): DiffResult<T> {\n  const mapClass: new () => MapInteface<any, number> = SUPPORT_MAP ? Map : (findKeyCallback ? HashMap : PolyMap);\n  const callback = findKeyCallback || ((e: T) => e);\n  const added: number[] = [];\n  const removed: number[] = [];\n  const maintained: number[][] = [];\n  const prevKeys = prevList.map(callback);\n  const keys = list.map(callback);\n  const prevKeyMap: MapInteface<any, number> = new mapClass();\n  const keyMap: MapInteface<any, number> = new mapClass();\n  const changedBeforeAdded: number[][] = [];\n  const fixed: boolean[] = [];\n  const removedMap: object = {};\n  let changed: number[][] = [];\n  let addedCount = 0;\n  let removedCount = 0;\n\n  // Add prevKeys and keys to the hashmap.\n  prevKeys.forEach((key, prevListIndex) => {\n    prevKeyMap.set(key, prevListIndex);\n  });\n  keys.forEach((key, listIndex) => {\n    keyMap.set(key, listIndex);\n  });\n\n  // Compare `prevKeys` and `keys` and add them to `removed` if they are not in `keys`.\n  prevKeys.forEach((key, prevListIndex) => {\n    const listIndex = keyMap.get(key);\n\n    // In prevList, but not in list, it is removed.\n    if (typeof listIndex === \"undefined\") {\n      ++removedCount;\n      removed.push(prevListIndex);\n    } else {\n      removedMap[listIndex] = removedCount;\n    }\n  });\n\n  // Compare `prevKeys` and `keys` and add them to `added` if they are not in `prevKeys`.\n  keys.forEach((key, listIndex) => {\n    const prevListIndex = prevKeyMap.get(key);\n\n    // In list, but not in prevList, it is added.\n    if (typeof prevListIndex === \"undefined\") {\n      added.push(listIndex);\n      ++addedCount;\n    } else {\n      maintained.push([prevListIndex, listIndex]);\n      removedCount = removedMap[listIndex] || 0;\n\n      changedBeforeAdded.push([\n        prevListIndex - removedCount,\n        listIndex - addedCount,\n      ]);\n      fixed.push(listIndex === prevListIndex);\n      if (prevListIndex !== listIndex) {\n        changed.push([prevListIndex, listIndex]);\n      }\n    }\n  });\n  // Sort by ascending order of 'to(list's index).\n  removed.reverse();\n\n  return new Result(\n    prevList,\n    list,\n    added,\n    removed,\n    changed,\n    maintained,\n    changedBeforeAdded,\n    fixed,\n  );\n}\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport { DiffResult, ListFormat } from \"./types\";\nimport { diff } from \"./utils\";\n\n/**\n * A module that checks diff when values are added, removed, or changed in an array.\n * @ko \uBC30\uC5F4 \uB610\uB294 \uC624\uBE0C\uC81D\uD2B8\uC5D0\uC11C \uAC12\uC774 \uCD94\uAC00\uB418\uAC70\uB098 \uC0AD\uC81C\uB418\uAC70\uB098 \uC21C\uC11C\uAC00 \uBCC0\uACBD\uC0AC\uD56D\uC744 \uCCB4\uD06C\uD558\uB294 \uBAA8\uB4C8\uC785\uB2C8\uB2E4.\n * @memberof eg\n */\nclass ListDiffer<T> {\n  private list: T[];\n  /**\n   * @param - Initializing Data Array. <ko> \uCD08\uAE30 \uC124\uC815\uD560 \uB370\uC774\uD130 \uBC30\uC5F4.</ko>\n   * @param - This callback function returns the key of the item. <ko> \uC544\uC774\uD15C\uC758 \uD0A4\uB97C \uBC18\uD658\uD558\uB294 \uCF5C\uBC31 \uD568\uC218\uC785\uB2C8\uB2E4.</ko>\n   * @example\n   * import ListDiffer from \"@egjs/list-differ\";\n   * // script => eg.ListDiffer\n   * const differ = new ListDiffer([0, 1, 2, 3, 4, 5], e => e);\n   * const result = differ.update([7, 8, 0, 4, 3, 6, 2, 1]);\n   * // List before update\n   * // [1, 2, 3, 4, 5]\n   * console.log(result.prevList);\n   * // Updated list\n   * // [4, 3, 6, 2, 1]\n   * console.log(result.list);\n   * // Index array of values added to `list`.\n   * // [0, 1, 5]\n   * console.log(result.added);\n   * // Index array of values removed in `prevList`.\n   * // [5]\n   * console.log(result.removed);\n   * // An array of index pairs of `prevList` and `list` with different indexes from `prevList` and `list`.\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.changed);\n   * // The subset of `changed` and an array of index pairs that moved data directly. Indicate an array of absolute index pairs of `ordered`.(Formatted by: Array<[index of prevList, index of list]>)\n   * // [[4, 3], [3, 4], [2, 6]]\n   * console.log(result.pureChanged);\n   * // An array of index pairs to be `ordered` that can synchronize `list` before adding data. (Formatted by: Array<[prevIndex, nextIndex]>)\n   * // [[4, 1], [4, 2], [4, 3]]\n   * console.log(result.ordered);\n   * // An array of index pairs of `prevList` and `list` that have not been added/removed so data is preserved.\n   * // [[0, 2], [4, 3], [3, 4], [2, 6], [1, 7]]\n   * console.log(result.maintained);\n   */\n  constructor(\n    list: ListFormat<T> = [],\n    private findKeyCallback?: (e: T, i: number, arr: T[]) => number | string,\n  ) {\n    this.list = [].slice.call(list);\n  }\n  /**\n   * Update list.\n   * @ko \uB9AC\uC2A4\uD2B8\uB97C \uC5C5\uB370\uC774\uD2B8\uB97C \uD569\uB2C8\uB2E4.\n   * @param - List to update <ko> \uC5C5\uB370\uC774\uD2B8\uD560 \uB9AC\uC2A4\uD2B8 </ko>\n   * @return - Returns the results of an update from `prevList` to `list`.<ko> `prevList`\uC5D0\uC11C `list`\uB85C \uC5C5\uB370\uC774\uD2B8\uD55C \uACB0\uACFC\uB97C \uBC18\uD658\uD55C\uB2E4. </ko>\n   */\n  public update(list: ListFormat<T>): DiffResult<T> {\n    const newData: T[] = [].slice.call(list);\n    const result = diff<T>(this.list, newData, this.findKeyCallback);\n\n    this.list = newData;\n    return result;\n  }\n}\n\nexport default ListDiffer;\n", "/*\negjs-list-differ\nCopyright (c) 2019-present NAVER Corp.\nMIT license\n*/\nimport ListDiffer from \"./ListDiffer\";\nexport default ListDiffer;\nexport { diff } from \"./utils\";\nexport * from \"./types\";\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { PropType } from \"vue\";\nimport { FlickingOptions, Plugin, Status } from \"@egjs/flicking\";\n\nexport default {\n  viewportTag: {\n    type: String,\n    default: \"div\",\n    required: false\n  },\n  cameraTag: {\n    type: String,\n    default: \"div\",\n    required: false\n  },\n  hideBeforeInit: {\n    type: Boolean,\n    default: false,\n    required: false\n  },\n  firstPanelSize: {\n    type: String,\n    required: false\n  },\n  options: {\n    type: Object as unknown as () => Partial<FlickingOptions>,\n    default: () => ({}),\n    required: false\n  },\n  plugins: {\n    type: Array as PropType<Plugin[]>,\n    default: () => ([]),\n    required: false\n  },\n  status: {\n    type: Object as PropType<Status>,\n    required: false\n  }\n};\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport {\n  ExternalRenderer,\n  getFlickingAttached,\n  PanelOptions,\n  RendererOptions\n} from \"@egjs/flicking\";\n\nimport VueFlicking from \"./Flicking\";\nimport VuePanel from \"./VuePanel\";\n\nexport interface VueRendererOptions extends RendererOptions {\n  vueFlicking: VueFlicking;\n}\n\nclass VueRenderer extends ExternalRenderer {\n  // Internal States\n  private _vueFlicking: VueFlicking;\n\n  public constructor(options: VueRendererOptions) {\n    super(options);\n\n    this._vueFlicking = options.vueFlicking;\n  }\n\n  public async render() {\n    const flicking = getFlickingAttached(this._flicking);\n    const vueFlicking = this._vueFlicking;\n    const strategy = this._strategy;\n\n    strategy.updateRenderingPanels(flicking);\n    strategy.renderPanels(flicking);\n\n    return new Promise<void>((resolve) => {\n      vueFlicking.renderEmitter.once(\"render\", resolve);\n      vueFlicking.$forceUpdate();\n    });\n  }\n\n  public async forceRenderAllPanels() {\n    const vueFlicking = this._vueFlicking;\n\n    await super.forceRenderAllPanels();\n\n    return new Promise<void>((resolve) => {\n      vueFlicking.renderEmitter.once(\"render\", resolve);\n      vueFlicking.$forceUpdate();\n    });\n  }\n\n  protected _collectPanels() {\n    const flicking = getFlickingAttached(this._flicking);\n    const vueFlicking = this._vueFlicking;\n    const childRefs = vueFlicking.$refs;\n    const vuePanels: any[] = Object.keys(childRefs).map(refKey => childRefs[refKey]);\n\n    this._panels = this._strategy.collectPanels(flicking, vuePanels);\n  }\n\n  protected _createPanel(externalComponent: VuePanel, options: PanelOptions) {\n    return this._strategy.createPanel(externalComponent, options);\n  }\n}\n\nexport default VueRenderer;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport { defineComponent } from \"vue\";\n\nconst VuePanel = defineComponent({\n  data() {\n    return {\n      hide: false\n    };\n  },\n  render() {\n    if (this.hide || !this.$slots.default) return;\n\n    return this.$slots.default();\n  }\n});\n\ntype VuePanelType = InstanceType<typeof VuePanel>;\n\ninterface VuePanel extends VuePanelType {}\nexport default VuePanel;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { ElementProvider } from \"@egjs/flicking\";\n\nimport VuePanel from \"./VuePanel\";\n\nclass VueElementProvider implements ElementProvider {\n  private _el: VuePanel;\n  private _cachedElement: HTMLElement;\n\n  public get rendered() { return !this._el.hide; }\n  public get element() {\n    const el = this._el.$el.nextSibling as HTMLElement;\n\n    if (el && el.nodeType === Node.ELEMENT_NODE) {\n      this._cachedElement = el;\n    }\n\n    return this._cachedElement;\n  }\n\n  public constructor(el: VuePanel) {\n    this._el = el;\n  }\n\n  public show() {\n    this._el.hide = false;\n  }\n\n  public hide() {\n    this._el.hide = true;\n  }\n}\n\nexport default VueElementProvider;\n", "/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { h, defineComponent, VNode, resolveComponent, Fragment, getCurrentInstance, Comment, Text } from \"vue\";\nimport ListDiffer, { DiffResult } from \"@egjs/list-differ\";\nimport Component from \"@egjs/component\";\nimport VanillaFlicking, {\n  EVENTS,\n  withFlickingMethods,\n  sync,\n  Plugin,\n  getRenderingPanels,\n  getDefaultCameraTransform,\n  range,\n  VirtualRenderingStrategy,\n  NormalRenderingStrategy\n} from \"@egjs/flicking\";\n\nimport FlickingProps from \"./FlickingProps\";\nimport VueRenderer, { VueRendererOptions } from \"./VueRenderer\";\nimport VuePanel from \"./VuePanel\";\nimport VueElementProvider from \"./VueElementProvider\";\nimport { VueFlicking } from \"./types\";\n\nconst Flicking = defineComponent({\n  props: FlickingProps,\n  components: {\n    Panel: VuePanel\n  },\n  data() {\n    return {} as {\n      renderEmitter: Component<{ render: void }>;\n      vanillaFlicking: VanillaFlicking;\n      pluginsDiffer: ListDiffer<Plugin>;\n      slotDiffer: ListDiffer<VNode>;\n      diffResult: DiffResult<VNode> | null;\n    };\n  },\n  created() {\n    this.vanillaFlicking = null;\n    this.renderEmitter = new Component();\n    this.diffResult = null;\n\n    this.getPanels = () => {\n      const componentInstance = getCurrentInstance() as unknown as { ctx: Flicking } | null;\n      const vueFlicking = componentInstance?.ctx;\n      const flicking = this.vanillaFlicking;\n      const defaultSlots = this.getSlots();\n      const diffResult = vueFlicking?.diffResult;\n\n      const slots = diffResult\n        ? getRenderingPanels(flicking, diffResult)\n        : defaultSlots;\n\n      const panelComponent = resolveComponent(\"Panel\");\n      const panels = slots.map((slot, idx) => h(panelComponent as any, {\n        key: slot.key!,\n        ref: idx.toString()\n      }, () => slot));\n\n      return panels;\n    };\n    this.getVirtualPanels = () => {\n      const options = this.options;\n      const {\n        panelClass = \"flicking-panel\"\n      } = options.virtual!;\n      const panelsPerView = options.panelsPerView as number;\n      const flicking = this.vanillaFlicking;\n      const initialized = flicking && flicking.initialized;\n\n      const renderingIndexes = initialized\n        ? flicking.renderer.strategy.getRenderingIndexesByOrder(flicking)\n        : range(panelsPerView + 1);\n\n      const firstPanel = initialized && flicking.panels[0];\n      const size = firstPanel\n        ? flicking.horizontal\n          ? { width: firstPanel.size }\n          : { height: firstPanel.size }\n        : {};\n\n      return renderingIndexes.map(idx => h(\"div\", {\n        key: idx,\n        ref: idx.toString(),\n        class: panelClass,\n        style: size,\n        \"data-element-index\": idx\n      }));\n    };\n\n    withFlickingMethods(this, \"vanillaFlicking\");\n  },\n  mounted() {\n    const options = this.options;\n    const viewportEl = this.$el as HTMLElement;\n    const rendererOptions: VueRendererOptions = {\n      vueFlicking: this,\n      align: options.align,\n      strategy: options.virtual && (options.panelsPerView ?? -1) > 0\n        ? new VirtualRenderingStrategy()\n        : new NormalRenderingStrategy({\n          providerCtor: VueElementProvider\n        })\n    };\n\n    const flicking = new VanillaFlicking(viewportEl, {\n      ...options,\n      externalRenderer: new VueRenderer(rendererOptions)\n    });\n    this.vanillaFlicking = flicking;\n\n    flicking.once(EVENTS.READY, () => {\n      this.$forceUpdate();\n    });\n\n    const slots = this.getSlots();\n    this.slotDiffer = new ListDiffer<VNode>(slots, vnode => vnode.key! as string | number);\n    this.pluginsDiffer = new ListDiffer<Plugin>();\n\n    this.bindEvents();\n    this.checkPlugins();\n\n    if (this.status) {\n      flicking.setStatus(this.status);\n    }\n  },\n  beforeUnmount() {\n    this.vanillaFlicking?.destroy();\n  },\n  beforeMount() {\n    this.fillKeys();\n  },\n  beforeUpdate() {\n    this.fillKeys();\n\n    this.diffResult = this.slotDiffer.update(this.getSlots());\n  },\n  updated() {\n    const flicking = this.vanillaFlicking;\n    const diffResult = this.diffResult;\n\n    this.checkPlugins();\n    this.renderEmitter.trigger(\"render\");\n\n    if (!diffResult || !flicking?.initialized) return;\n\n    const children = this.getChildren();\n\n    sync(flicking, diffResult, children);\n\n    if (diffResult.added.length > 0 || diffResult.removed.length > 0) {\n      this.$forceUpdate();\n    }\n\n    this.diffResult = undefined;\n  },\n  render() {\n    const flicking = this.vanillaFlicking;\n    const options = this.options;\n    const initialized = flicking && flicking.initialized;\n    const isHorizontal = flicking\n      ? flicking.horizontal\n      : this.options.horizontal ?? true;\n\n    const viewportData = {\n      class: {\n        \"flicking-viewport\": true,\n        \"vertical\": !isHorizontal,\n        \"flicking-hidden\": this.hideBeforeInit && !initialized\n      }\n    };\n    const cameraData = {\n      class: {\n        \"flicking-camera\": true\n      },\n      style: !initialized && this.firstPanelSize\n        ? { transform: getDefaultCameraTransform(this.options.align, this.options.horizontal, this.firstPanelSize) }\n        : {}\n    };\n\n    const panels = options.virtual && options.panelsPerView && options.panelsPerView > 0\n      ? this.getVirtualPanels\n      : this.getPanels;\n\n    const viewportSlots = this.$slots.viewport\n      ? this.$slots.viewport()\n      : [];\n\n    return h(this.viewportTag, viewportData,\n      [h(this.cameraTag, cameraData, { default: panels }), ...viewportSlots]\n    );\n  },\n  methods: {\n    getSlots() {\n      const slots = this.$slots.default\n        ? this.$slots.default()\n        : [];\n\n      return slots\n        .reduce((elementSlots, slot) => [...elementSlots, ...this.getElementVNodes(slot)], [] as VNode[])\n        .filter(slot => slot.type !== Comment && slot.type !== Text);\n    },\n    getElementVNodes(slot: VNode, childSlots: VNode[] = []): VNode[] {\n      if (slot.type === Fragment && Array.isArray(slot.children)) {\n        slot.children\n          .filter(child => child && typeof child === \"object\")\n          .forEach(child => this.getElementVNodes(child as VNode, childSlots));\n      } else {\n        childSlots.push(slot);\n      }\n\n      return childSlots;\n    },\n    bindEvents() {\n      const flicking = this.vanillaFlicking;\n      const events = (Object.keys(EVENTS) as Array<keyof typeof EVENTS>)\n        .map(key => EVENTS[key]);\n\n      events.forEach(eventName => {\n        flicking.on(eventName, (e: any) => {\n          e.currentTarget = this;\n          // Make events from camelCase to kebab-case\n          this.$emit(eventName.replace(/([A-Z])/g, \"-$1\").toLowerCase(), e);\n        });\n      });\n    },\n    checkPlugins() {\n      const { list, added, removed, prevList } = this.pluginsDiffer.update(this.plugins);\n\n      this.vanillaFlicking!.addPlugins(...added.map(index => list[index]));\n      this.vanillaFlicking!.removePlugins(...removed.map(index => prevList[index]));\n    },\n    fillKeys() {\n      const vnodes = this.getSlots();\n\n      vnodes.forEach((node, idx) => {\n        if (node.key == null) {\n          node.key = `$_${idx}`;\n        }\n      });\n    },\n    getChildren() {\n      const childRefs = this.$refs;\n\n      return Object.keys(childRefs).map(refKey => childRefs[refKey]);\n    }\n  }\n}) as unknown as VueFlicking;\n\ninterface Flicking extends VueFlicking, VanillaFlicking {}\nexport default Flicking;\n", "import d from \"./node_modules/@egjs/vue3-flicking/dist/flicking.esm.js\";export default d;\nexport * from \"./node_modules/@egjs/vue3-flicking/dist/flicking.esm.js\""],
  "mappings": "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",
  "names": []
}
