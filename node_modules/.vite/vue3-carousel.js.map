{
  "version": 3,
  "sources": ["../vue3-carousel/dist/carousel.es.js"],
  "sourcesContent": ["/**\n * Vue 3 Carousel 0.1.38\n * (c) 2022\n * @license MIT\n */\nimport { defineComponent, ref, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, watchEffect, h, inject } from 'vue';\n\nconst defaultConfigs = {\r\n    itemsToShow: 1,\r\n    itemsToScroll: 1,\r\n    modelValue: 0,\r\n    transition: 300,\r\n    autoplay: 0,\r\n    snapAlign: 'center',\r\n    wrapAround: false,\r\n    pauseAutoplayOnHover: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    dir: 'ltr',\r\n    breakpoints: undefined,\r\n};\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction debounce(fn, delay) {\r\n    let timerId;\r\n    return function (...args) {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n}\r\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction throttle(fn, limit) {\r\n    let inThrottle;\r\n    return function (...args) {\r\n        const self = this;\r\n        if (!inThrottle) {\r\n            fn.apply(self, args);\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n        }\r\n    };\r\n}\r\nfunction getSlidesVNodes(vNode) {\r\n    var _a, _b, _c;\r\n    // Return empty array if there's any node\r\n    if (!vNode)\r\n        return [];\r\n    // Check if the Slides components are added directly without v-for (#72)\r\n    if (((_b = (_a = vNode[0]) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.name) === 'CarouselSlide')\r\n        return vNode;\r\n    return ((_c = vNode[0]) === null || _c === void 0 ? void 0 : _c.children) || [];\r\n}\r\nfunction getMaxSlideIndex(config, slidesCount) {\r\n    if (config.wrapAround) {\r\n        return slidesCount - 1;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return slidesCount - config.itemsToShow;\r\n        case 'end':\r\n            return slidesCount - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        case 'center-even':\r\n            return slidesCount - Math.ceil(config.itemsToShow / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getMinSlideIndex(config) {\r\n    if (config.wrapAround) {\r\n        return 0;\r\n    }\r\n    switch (config.snapAlign) {\r\n        case 'start':\r\n            return 0;\r\n        case 'end':\r\n            return config.itemsToShow - 1;\r\n        case 'center':\r\n        case 'center-odd':\r\n            return Math.floor((config.itemsToShow - 1) / 2);\r\n        case 'center-even':\r\n            return Math.floor((config.itemsToShow - 2) / 2);\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\nfunction getCurrentSlideIndex(config, val, max, min) {\r\n    if (config.wrapAround) {\r\n        return val;\r\n    }\r\n    return Math.min(Math.max(val, min), max);\r\n}\r\nfunction getSlidesToScroll({ slidesBuffer, currentSlide, snapAlign, itemsToShow, wrapAround, slidesCount, }) {\r\n    let output = slidesBuffer.indexOf(currentSlide);\r\n    if (output === -1) {\r\n        output = slidesBuffer.indexOf(Math.ceil(currentSlide));\r\n    }\r\n    if (snapAlign === 'center' || snapAlign === 'center-odd') {\r\n        output -= (itemsToShow - 1) / 2;\r\n    }\r\n    else if (snapAlign === 'center-even') {\r\n        output -= (itemsToShow - 2) / 2;\r\n    }\r\n    else if (snapAlign === 'end') {\r\n        output -= itemsToShow - 1;\r\n    }\r\n    if (!wrapAround) {\r\n        const max = slidesCount - itemsToShow;\r\n        const min = 0;\r\n        output = Math.max(Math.min(output, max), min);\r\n    }\r\n    return output;\r\n}\n\nvar Carousel = defineComponent({\r\n    name: 'Carousel',\r\n    props: {\r\n        // count of items to showed per view\r\n        itemsToShow: {\r\n            default: defaultConfigs.itemsToShow,\r\n            type: Number,\r\n        },\r\n        // count of items to be scrolled\r\n        itemsToScroll: {\r\n            default: defaultConfigs.itemsToScroll,\r\n            type: Number,\r\n        },\r\n        // control infinite scrolling mode\r\n        wrapAround: {\r\n            default: defaultConfigs.wrapAround,\r\n            type: Boolean,\r\n        },\r\n        // control snap position alignment\r\n        snapAlign: {\r\n            default: defaultConfigs.snapAlign,\r\n            validator(value) {\r\n                // The value must match one of these strings\r\n                return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\r\n            },\r\n        },\r\n        // sliding transition time in ms\r\n        transition: {\r\n            default: defaultConfigs.transition,\r\n            type: Number,\r\n        },\r\n        // an object to store breakpoints\r\n        breakpoints: {\r\n            default: defaultConfigs.breakpoints,\r\n            type: Object,\r\n        },\r\n        // time to auto advance slides in ms\r\n        autoplay: {\r\n            default: defaultConfigs.autoplay,\r\n            type: Number,\r\n        },\r\n        // pause autoplay when mouse hover over the carousel\r\n        pauseAutoplayOnHover: {\r\n            default: defaultConfigs.pauseAutoplayOnHover,\r\n            type: Boolean,\r\n        },\r\n        // slide number number of initial slide\r\n        modelValue: {\r\n            default: undefined,\r\n            type: Number,\r\n        },\r\n        // toggle mouse dragging.\r\n        mouseDrag: {\r\n            default: defaultConfigs.mouseDrag,\r\n            type: Boolean,\r\n        },\r\n        // toggle mouse dragging.\r\n        touchDrag: {\r\n            default: defaultConfigs.touchDrag,\r\n            type: Boolean,\r\n        },\r\n        // control snap position alignment\r\n        dir: {\r\n            default: defaultConfigs.dir,\r\n            validator(value) {\r\n                // The value must match one of these strings\r\n                return ['rtl', 'ltr'].includes(value);\r\n            },\r\n        },\r\n        // an object to pass all settings\r\n        settings: {\r\n            default() {\r\n                return {};\r\n            },\r\n            type: Object,\r\n        },\r\n    },\r\n    setup(props, { slots, emit, expose }) {\r\n        var _a;\r\n        const root = ref(null);\r\n        const slides = ref([]);\r\n        const slidesBuffer = ref([]);\r\n        const slideWidth = ref(0);\r\n        const slidesCount = ref(1);\r\n        const autoplayTimer = ref(null);\r\n        const transitionTimer = ref(null);\r\n        let breakpoints = ref({});\r\n        // generate carousel configs\r\n        let __defaultConfig = Object.assign({}, defaultConfigs);\r\n        // current config\r\n        const config = reactive(Object.assign({}, __defaultConfig));\r\n        // slides\r\n        const currentSlideIndex = ref((_a = config.modelValue) !== null && _a !== void 0 ? _a : 0);\r\n        const prevSlideIndex = ref(0);\r\n        const middleSlideIndex = ref(0);\r\n        const maxSlideIndex = ref(0);\r\n        const minSlideIndex = ref(0);\r\n        provide('config', config);\r\n        provide('slidesBuffer', slidesBuffer);\r\n        provide('slidesCount', slidesCount);\r\n        provide('currentSlide', currentSlideIndex);\r\n        provide('maxSlide', maxSlideIndex);\r\n        provide('minSlide', minSlideIndex);\r\n        /**\r\n         * Configs\r\n         */\r\n        function initDefaultConfigs() {\r\n            // generate carousel configs\r\n            const mergedConfigs = Object.assign(Object.assign({}, props), props.settings);\r\n            // Set breakpoints\r\n            breakpoints = ref(Object.assign({}, mergedConfigs.breakpoints));\r\n            // remove extra values\r\n            __defaultConfig = Object.assign(Object.assign({}, mergedConfigs), { settings: undefined, breakpoints: undefined });\r\n            bindConfigs(__defaultConfig);\r\n        }\r\n        function updateBreakpointsConfigs() {\r\n            const breakpointsArray = Object.keys(breakpoints.value)\r\n                .map((key) => Number(key))\r\n                .sort((a, b) => +b - +a);\r\n            let newConfig = Object.assign({}, __defaultConfig);\r\n            breakpointsArray.some((breakpoint) => {\r\n                const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\r\n                if (isMatched) {\r\n                    newConfig = Object.assign(Object.assign({}, newConfig), breakpoints.value[breakpoint]);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            bindConfigs(newConfig);\r\n        }\r\n        function bindConfigs(newConfig) {\r\n            for (let key in newConfig) {\r\n                // @ts-ignore\r\n                config[key] = newConfig[key];\r\n            }\r\n        }\r\n        const handleWindowResize = debounce(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            updateSlideWidth();\r\n        }, 16);\r\n        /**\r\n         * Setup functions\r\n         */\r\n        function updateSlideWidth() {\r\n            if (!root.value)\r\n                return;\r\n            const rect = root.value.getBoundingClientRect();\r\n            slideWidth.value = rect.width / config.itemsToShow;\r\n        }\r\n        function updateSlidesData() {\r\n            slidesCount.value = Math.max(slides.value.length, 1);\r\n            if (slidesCount.value <= 0)\r\n                return;\r\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\r\n            maxSlideIndex.value = getMaxSlideIndex(config, slidesCount.value);\r\n            minSlideIndex.value = getMinSlideIndex(config);\r\n            currentSlideIndex.value = getCurrentSlideIndex(config, currentSlideIndex.value, maxSlideIndex.value, minSlideIndex.value);\r\n        }\r\n        function updateSlidesBuffer() {\r\n            const slidesArray = [...Array(slidesCount.value).keys()];\r\n            const shouldShiftSlides = config.wrapAround && config.itemsToShow + 1 <= slidesCount.value;\r\n            if (shouldShiftSlides) {\r\n                const buffer = config.itemsToShow !== 1\r\n                    ? Math.round((slidesCount.value - config.itemsToShow) / 2)\r\n                    : 0;\r\n                let shifts = buffer - currentSlideIndex.value;\r\n                if (config.snapAlign === 'end') {\r\n                    shifts += Math.floor(config.itemsToShow - 1);\r\n                }\r\n                else if (config.snapAlign === 'center' || config.snapAlign === 'center-odd') {\r\n                    shifts++;\r\n                }\r\n                // Check shifting directions\r\n                if (shifts < 0) {\r\n                    for (let i = shifts; i < 0; i++) {\r\n                        slidesArray.push(Number(slidesArray.shift()));\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < shifts; i++) {\r\n                        slidesArray.unshift(Number(slidesArray.pop()));\r\n                    }\r\n                }\r\n            }\r\n            slidesBuffer.value = slidesArray;\r\n        }\r\n        onMounted(() => {\r\n            if (breakpoints.value) {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n            }\r\n            nextTick(() => setTimeout(updateSlideWidth, 16));\r\n            if (config.autoplay && config.autoplay > 0) {\r\n                initializeAutoplay();\r\n            }\r\n            window.addEventListener('resize', handleWindowResize, { passive: true });\r\n        });\r\n        onUnmounted(() => {\r\n            if (transitionTimer.value) {\r\n                clearTimeout(transitionTimer.value);\r\n            }\r\n            resetAutoplayTimer(false);\r\n        });\r\n        /**\r\n         * Carousel Event listeners\r\n         */\r\n        let isTouch = false;\r\n        const startPosition = { x: 0, y: 0 };\r\n        const endPosition = { x: 0, y: 0 };\r\n        const dragged = reactive({ x: 0, y: 0 });\r\n        const isDragging = ref(false);\r\n        const isHover = ref(false);\r\n        const handleMouseEnter = () => {\r\n            isHover.value = true;\r\n        };\r\n        const handleMouseLeave = () => {\r\n            isHover.value = false;\r\n        };\r\n        const handleDrag = throttle((event) => {\r\n            if (!isTouch)\r\n                event.preventDefault();\r\n            endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            const deltaX = endPosition.x - startPosition.x;\r\n            const deltaY = endPosition.y - startPosition.y;\r\n            dragged.y = deltaY;\r\n            dragged.x = deltaX;\r\n        }, 16);\r\n        function handleDragStart(event) {\r\n            isTouch = event.type === 'touchstart';\r\n            if (!isTouch)\r\n                event.preventDefault();\r\n            if ((!isTouch && event.button !== 0) || isSliding.value) {\r\n                return;\r\n            }\r\n            isDragging.value = true;\r\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDrag);\r\n            document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd);\r\n        }\r\n        function handleDragEnd() {\r\n            isDragging.value = false;\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const tolerance = Math.sign(dragged.x) * 0.4;\r\n            const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\r\n            let newSlide = getCurrentSlideIndex(config, currentSlideIndex.value - draggedSlides, maxSlideIndex.value, minSlideIndex.value);\r\n            slideTo(newSlide);\r\n            dragged.x = 0;\r\n            dragged.y = 0;\r\n            document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDrag);\r\n            document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd);\r\n        }\r\n        /**\r\n         * Autoplay\r\n         */\r\n        function initializeAutoplay() {\r\n            autoplayTimer.value = setInterval(() => {\r\n                if (config.pauseAutoplayOnHover && isHover.value) {\r\n                    return;\r\n                }\r\n                next();\r\n            }, config.autoplay);\r\n        }\r\n        function resetAutoplayTimer(restart = true) {\r\n            if (!autoplayTimer.value) {\r\n                return;\r\n            }\r\n            clearInterval(autoplayTimer.value);\r\n            if (restart) {\r\n                initializeAutoplay();\r\n            }\r\n        }\r\n        /**\r\n         * Navigation function\r\n         */\r\n        const isSliding = ref(false);\r\n        function slideTo(slideIndex, mute = false) {\r\n            resetAutoplayTimer();\r\n            if (currentSlideIndex.value === slideIndex || isSliding.value) {\r\n                return;\r\n            }\r\n            // Wrap slide index\r\n            const lastSlideIndex = slidesCount.value - 1;\r\n            if (slideIndex > lastSlideIndex) {\r\n                return slideTo(slideIndex - slidesCount.value);\r\n            }\r\n            if (slideIndex < 0) {\r\n                return slideTo(slideIndex + slidesCount.value);\r\n            }\r\n            isSliding.value = true;\r\n            prevSlideIndex.value = currentSlideIndex.value;\r\n            currentSlideIndex.value = slideIndex;\r\n            if (!mute) {\r\n                emit('update:modelValue', currentSlideIndex.value);\r\n            }\r\n            transitionTimer.value = setTimeout(() => {\r\n                if (config.wrapAround)\r\n                    updateSlidesBuffer();\r\n                isSliding.value = false;\r\n            }, config.transition);\r\n        }\r\n        function next() {\r\n            let nextSlide = currentSlideIndex.value + config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                nextSlide = Math.min(nextSlide, maxSlideIndex.value);\r\n            }\r\n            slideTo(nextSlide);\r\n        }\r\n        function prev() {\r\n            let prevSlide = currentSlideIndex.value - config.itemsToScroll;\r\n            if (!config.wrapAround) {\r\n                prevSlide = Math.max(prevSlide, minSlideIndex.value);\r\n            }\r\n            slideTo(prevSlide);\r\n        }\r\n        const nav = { slideTo, next, prev };\r\n        provide('nav', nav);\r\n        /**\r\n         * Track style\r\n         */\r\n        const slidesToScroll = computed(() => getSlidesToScroll({\r\n            slidesBuffer: slidesBuffer.value,\r\n            itemsToShow: config.itemsToShow,\r\n            snapAlign: config.snapAlign,\r\n            wrapAround: Boolean(config.wrapAround),\r\n            currentSlide: currentSlideIndex.value,\r\n            slidesCount: slidesCount.value,\r\n        }));\r\n        provide('slidesToScroll', slidesToScroll);\r\n        const trackStyle = computed(() => {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const xScroll = slidesToScroll.value * slideWidth.value * direction;\r\n            return {\r\n                transform: `translateX(${dragged.x - xScroll}px)`,\r\n                transition: `${isSliding.value ? config.transition : 0}ms`,\r\n            };\r\n        });\r\n        function initCarousel() {\r\n            initDefaultConfigs();\r\n        }\r\n        function restartCarousel() {\r\n            initDefaultConfigs();\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlidesBuffer();\r\n            updateSlideWidth();\r\n        }\r\n        function updateCarousel() {\r\n            updateSlidesData();\r\n            updateSlidesBuffer();\r\n        }\r\n        // Update the carousel on props change\r\n        watch(() => Object.values(props), restartCarousel);\r\n        // Init carousel\r\n        initCarousel();\r\n        watchEffect(() => {\r\n            // Handel when slides added/removed\r\n            const needToUpdate = slidesCount.value !== slides.value.length;\r\n            const currentSlideUpdated = props.modelValue !== undefined && currentSlideIndex.value !== props.modelValue;\r\n            if (currentSlideUpdated) {\r\n                slideTo(Number(props.modelValue), true);\r\n            }\r\n            if (needToUpdate) {\r\n                updateCarousel();\r\n            }\r\n        });\r\n        const data = {\r\n            config,\r\n            slidesBuffer,\r\n            slidesCount,\r\n            slideWidth,\r\n            currentSlide: currentSlideIndex,\r\n            maxSlide: maxSlideIndex,\r\n            minSlide: minSlideIndex,\r\n            middleSlide: middleSlideIndex,\r\n        };\r\n        expose({\r\n            updateBreakpointsConfigs,\r\n            updateSlidesData,\r\n            updateSlideWidth,\r\n            updateSlidesBuffer,\r\n            initCarousel,\r\n            restartCarousel,\r\n            updateCarousel,\r\n            slideTo,\r\n            next,\r\n            prev,\r\n            nav,\r\n            data,\r\n        });\r\n        const slotSlides = slots.default || slots.slides;\r\n        const slotAddons = slots.addons;\r\n        const slotsProps = reactive(data);\r\n        return () => {\r\n            const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\r\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\r\n            slides.value = slidesElements;\r\n            // Bind slide order\r\n            slidesElements.forEach((el, index) => (el.props.index = index));\r\n            const trackEl = h('ol', {\r\n                class: 'carousel__track',\r\n                style: trackStyle.value,\r\n                onMousedown: config.mouseDrag ? handleDragStart : null,\r\n                onTouchstart: config.touchDrag ? handleDragStart : null,\r\n            }, slidesElements);\r\n            const viewPortEl = h('div', { class: 'carousel__viewport' }, trackEl);\r\n            return h('section', {\r\n                ref: root,\r\n                class: {\r\n                    carousel: true,\r\n                    'carousel--rtl': config.dir === 'rtl',\r\n                },\r\n                dir: config.dir,\r\n                'aria-label': 'Gallery',\r\n                onMouseenter: handleMouseEnter,\r\n                onMouseleave: handleMouseLeave,\r\n            }, [viewPortEl, addonsElements]);\r\n        };\r\n    },\r\n});\n\nconst icons = {\r\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\r\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\r\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\r\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\r\n};\n\nconst Icon = (props) => {\r\n    const iconName = props.name;\r\n    if (!iconName || typeof iconName !== 'string') {\r\n        return;\r\n    }\r\n    const path = icons[iconName];\r\n    const pathEl = h('path', { d: path });\r\n    const iconTitle = props.title || iconName;\r\n    const titleEl = h('title', null, iconName);\r\n    return h('svg', {\r\n        class: 'carousel__icon',\r\n        viewBox: '0 0 24 24',\r\n        role: 'img',\r\n        ariaLabel: iconTitle,\r\n    }, [titleEl, pathEl]);\r\n};\r\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\r\n    const { next: slotNext, prev: slotPrev } = slots;\r\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const isRTL = config.dir === 'rtl';\r\n    const prevButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__prev',\r\n            !config.wrapAround &&\r\n                currentSlide.value <= minSlide.value &&\r\n                'carousel__prev--in-active',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to previous slide`,\r\n        onClick: nav.prev,\r\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: isRTL ? 'arrowRight' : 'arrowLeft' }));\r\n    const nextButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__next',\r\n            !config.wrapAround &&\r\n                currentSlide.value >= maxSlide.value &&\r\n                'carousel__next--in-active',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to next slide`,\r\n        onClick: nav.next,\r\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: isRTL ? 'arrowLeft' : 'arrowRight' }));\r\n    return [prevButton, nextButton];\r\n};\n\nvar Slide = defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const slidesBuffer = inject('slidesBuffer', ref([]));\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const wrapOrder = ref(props.index);\r\n        if (config.wrapAround) {\r\n            updateOrder();\r\n            watch(slidesBuffer, updateOrder);\r\n        }\r\n        function updateOrder() {\r\n            wrapOrder.value = slidesBuffer.value.indexOf(props.index);\r\n        }\r\n        const slideStyle = computed(() => {\r\n            const items = config.itemsToShow;\r\n            const width = `${(1 / items) * 100}%`;\r\n            return {\r\n                width,\r\n                order: wrapOrder.value.toString(),\r\n            };\r\n        });\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isVisible = () => {\r\n            const min = Math.ceil(slidesToScroll.value);\r\n            const max = Math.floor(slidesToScroll.value + config.itemsToShow);\r\n            const current = slidesBuffer.value.slice(min, max);\r\n            return current.includes(props.index);\r\n        };\r\n        const isPrev = () => props.index === slidesBuffer.value[Math.ceil(slidesToScroll.value) - 1];\r\n        const isNext = () => props.index ===\r\n            slidesBuffer.value[Math.floor(slidesToScroll.value + config.itemsToShow)];\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: slideStyle.value,\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                },\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\n\nconst Pagination = () => {\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    function handleButtonClick(slideNumber) {\r\n        nav.slideTo(slideNumber);\r\n    }\r\n    const isActive = (slide) => {\r\n        const val = currentSlide.value;\r\n        return (val === slide ||\r\n            (val > maxSlide.value && slide >= maxSlide.value) ||\r\n            (val < minSlide.value && slide <= minSlide.value));\r\n    };\r\n    const children = [];\r\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\r\n        const button = h('button', {\r\n            type: 'button',\r\n            class: {\r\n                'carousel__pagination-button': true,\r\n                'carousel__pagination-button--active': isActive(slide),\r\n            },\r\n            'aria-label': `Navigate to slide ${slide + 1}`,\r\n            onClick: () => handleButtonClick(slide),\r\n        });\r\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\r\n        children.push(item);\r\n    }\r\n    return h('ol', { class: 'carousel__pagination' }, children);\r\n};\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n"],
  "mappings": "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",
  "names": []
}
